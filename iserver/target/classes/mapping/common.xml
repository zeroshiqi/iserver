<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ichazuo.dao.CommonDao">
	<!-- 查询线下课程信息 -->
	<select id="findWebCourseOfflineInfo" resultType="cn.ichazuo.model.app.WebOfflineCourseInfo"
		parameterType="java.lang.Long">
		select o.is_crowd as isCrowd,t.course_name as
		title,o.course_content as content,t.create_at as
		createAt,t.web_click_number as clickNumber,o.price,o.student_num as
		total,t.synopsis,t.avatar,t.cover
		from t_course t left join t_course_offline o on o.course_id = t.id where
		t.status = 1 and t.id = #{courseId}
	</select>

	<!-- 查询课程web信息 -->
	<select id="findCourseWebInfo" parameterType="java.lang.Long"
		resultType="cn.ichazuo.model.table.CourseWebInfo">
		select id,url,ifnull(number,0) as number,course_id as
		courseId from t_course_web_info where course_id = #{courseId} limit 1
	</select>
	<select id="findUserInfoByUnionId" parameterType="java.lang.String"
		resultType="cn.ichazuo.model.app.UserInfo">
		select u.name,u.mobile,u.weixin,u.sex,u.`work` as
		company,ifnull(o.form_nick_name,"") as
		weixinNickName,o.job,o.buy_intentions as
		buyIntentions,o.email,o.join_reason as joinReason,o.invoice_type as
		invoiceType,o.invoice_title as invoiceTitle,o.invoice_address as
		invoiceAddress,o.email from t_course_web_order_user u
		left join t_course_web_order o on o.id = u.order_id
		where o.unionid = #{unionId} and is_gift!=1 order by
		o.id desc limit 1
	</select>
	<!-- 根据unionId查寻用户 -->
	<select id="findUserEmailInfoByUnionId" parameterType="java.lang.String"
		resultType="cn.ichazuo.model.app.UserInfo">
		select u.name,u.mobile,u.weixin,u.sex,u.`work` as
		company,ifnull(o.form_nick_name,"") as
		weixinNickName,o.job,o.buy_intentions as
		buyIntentions,o.email,o.join_reason as joinReason,o.invoice_type as
		invoiceType,o.invoice_title as invoiceTitle,o.invoice_address as
		invoiceAddress,o.email from t_course_web_order_user u
		left join t_course_web_order o on o.id = u.order_id
		where o.unionid = #{unionId} and is_gift!=1 and o.email is not null order by
		o.id desc limit 1
	</select>
	<select id="findInvoiceDetailByUnionId" parameterType="java.lang.String"
		resultType="cn.ichazuo.model.app.UserInfo">
		select u.name,u.mobile,u.weixin,u.sex,u.`work` as
		company,ifnull(o.form_nick_name,"") as
		weixinNickName,o.job,o.buy_intentions as
		buyIntentions,o.email,o.is_gift as isGift,o.join_reason as joinReason,o.invoice_type as
		invoiceType,o.invoice_title as invoiceTitle,o.invoice_status as invoiceStatus,o.invoice_remarks as invoiceRemarks,o.invoice_address as
		invoiceAddress,o.invoice_name as invoiceName,o.invoice_mobile as invoiceMobile,o.email,o.is_gift as isGift from t_course_web_order_user u
		left join t_course_web_order o on o.id = u.order_id
		where o.unionid = #{unionId} and invoice_title is not null order by
		o.id desc limit 1
	</select>
	<select id="findInvoiceDetailByOrderNo" parameterType="java.lang.String"
		resultType="cn.ichazuo.model.app.UserInfo">
		select u.name,u.mobile,u.weixin,u.sex,u.`work` as
		company,ifnull(o.form_nick_name,"") as
		weixinNickName,o.job,o.buy_intentions as
		buyIntentions,o.email,o.is_gift as isGift,o.join_reason as joinReason,o.invoice_status as invoiceStatus,o.invoice_remarks as invoiceRemarks,o.invoice_type as
		invoiceType,o.invoice_name as invoiceName,o.invoice_mobile as invoiceMobile,o.invoice_title as invoiceTitle,o.invoice_address as
		invoiceAddress,o.email,o.unionid as unionId from t_course_web_order_user u
		left join t_course_web_order o on o.id = u.order_id
		where o.order_code = #{orderNo} order by
		o.id desc limit 1
	</select>
	<!-- 根据订单编号查询是否 -->
	<select id="findGiftDetailByOrderNo" parameterType="java.lang.String"
		resultType="cn.ichazuo.model.app.GiftInfo">
		select z.name as name,z.mobile as mobile,o.nickname as weixinNickName,a.synopsis,o.avatar,o.message,o.is_gift as isGift,a.`course_name` as courseName,a.begin_time as beginTime,o.unionid as unionId,o.gift_date as giftDate from t_course_web_order o 
		join t_course a on a.id = o.course_id join t_course_offline b on b.course_id = a.id join t_course_web_order_user z on z.order_id = o.id
		where a.status=1 and o.status=1 and b.status=1
		and o.order_code = #{orderNo} order by
		o.id desc limit 1
	</select>
	<!-- 更新点击时间 -->
	<update id="updateCourseWebInfo" parameterType="cn.ichazuo.model.table.CourseWebInfo">
		update
		t_course_web_info set number = #{number} where id = #{id}
	</update>

	<!-- 查询全部问题 -->
	<select id="findAllQuestion" resultType="cn.ichazuo.model.table.Question">
		select
		id,a,b,c,d,title,answer,type,user_name as userName from t_question
		where status = 1
	</select>
	<!-- 根据type的值取相应的题目 -->
	<select id="findAllQuestionByType" resultType="cn.ichazuo.model.table.Question">
		select
		id,a,b,c,d,title,answer,type,user_name as userName from t_question
		where status = 1 and type= #{type}
	</select>

	<select id="findAllImages" resultType="cn.ichazuo.model.app.Images">
		select url,image_url as
		imageUrl,title from t_image where status = 1
	</select>

	<select id="findAllImagesV2" resultType="cn.ichazuo.model.app.Images"
		parameterType="java.lang.Integer">
		select url,image_url as imageUrl,title from t_image
		where status = 1 and type = #{type}
	</select>

	<insert id="saveTicket" parameterType="cn.ichazuo.model.table.Ticket"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		t_ticket(union_id,price,create_at,level,avatar,nick_name,last_time)
		values(#{unionId},#{price},now(),#{level},#{avatar},#{nickName},#{lastTime})
	</insert>
	<!-- 保存企业信息 -->
	<insert id="saveCompany" parameterType="cn.ichazuo.model.table.Business"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		t_business(business_name,business_level,create_at,login_name,password,status)
		values(#{businessName},#{businessLevel},now(),#{loginName},#{password},1)
	</insert>
	<!-- 答题接口 -->
	
	<update id="updateEmployee" parameterType="cn.ichazuo.model.table.Employee">
		update t_business_employee set business_id=#{businessId},business_name=#{businessId},if_business=0,expiry_date=365,create_at=now() where id = #{id}
	</update>
	
	<update id="updateEmployee1" parameterType="cn.ichazuo.model.table.Employee">
		update t_business_employee set unionid=#{unionid},openid=#{openid},wx_avatar=#{wxAvatar},wx_name=#{wxName},update_at=now() where id = #{id}
	</update>
	<update id="updateEmployee2" parameterType="cn.ichazuo.model.table.Employee">
		update t_business_employee set province=#{province},city=#{city} where id = #{id}
	</update>
	
	<update id="updateGiftByCode" parameterType="cn.ichazuo.model.table.Gift">
		update t_haoduoke_gift set union_id=#{unionId},nick_name=#{nickName},collection_time=now(),avatar=#{avatar},mobile=#{mobile} where g_code = #{gCode}
	</update>
	<update id="updateEmployeeXL" parameterType="cn.ichazuo.model.table.Employee">
		update t_business_employee set business_id=#{businessId},business_name=#{businessId},if_business=#{ifBusiness},expiry_date=185,create_at=now() where id = #{id}
	</update>
	<insert id="saveScore" parameterType="cn.ichazuo.model.table.Ticket"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		t_ticket(union_id,create_at,avatar,nick_name,score,parent_id,top_parent_id,parent_name)
		values(#{unionId},now(),#{avatar},#{nickName},#{score},#{parentId},#{topParentId},#{parentName})
	</insert>

	<select id="findTicket" parameterType="java.lang.Long"
		resultType="cn.ichazuo.model.table.Ticket">
		select a.id,a.union_id as
		unionId,a.price,a.favour,a.level,a.avatar,a.nick_name as
		nickName,a.status,a.last_time as lastTime,a.score,a.parent_id as
		parentId,a.top_parent_id as topParentId,a.parent_name as parentName
		from t_ticket a where a.id = #{id}
	</select>

	<select id="findTicketNo" parameterType="cn.ichazuo.model.table.Ticket"
		resultType="java.lang.Integer">
		SELECT a.rowNo from(SELECT (@rowNum :=@rowNum + 1) AS
		rowNo,union_id FROM t_ticket,(SELECT(@rowNum := 0)) b where parent_id=
		#{parentId} and status = 1 order by score asc) as a where a.union_id =
		#{unionId}
	</select>

	<select id="findTicketCount" parameterType="cn.ichazuo.model.table.Ticket"
		resultType="java.lang.Integer">
		SELECT count(*) FROM t_ticket where parent_id= #{parentId}
		and status = 1
	</select>

	<select id="findUnionIdById" parameterType="java.lang.Long"
		resultType="java.lang.String">
		SELECT union_id FROM t_ticket where id = #{id} and status =
		1
	</select>

	<select id="findParentIdById" parameterType="java.lang.Long"
		resultType="java.lang.Integer">
		SELECT parent_id FROM t_ticket where id= #{id} and status =
		1
	</select>

	<select id="findScoreMaxByParentId" parameterType="java.lang.Integer"
		resultType="java.lang.Long">
		SELECT score FROM t_ticket where parent_id= #{parentId} and
		status = 1 order by score desc limit 1
	</select>

	<select id="findScoreMinByParentId" parameterType="java.lang.Integer"
		resultType="java.lang.Long">
		SELECT score FROM t_ticket where parent_id= #{parentId} and
		status = 1 order by score asc limit 1
	</select>

	<update id="updateTicketFavour" parameterType="java.lang.Long">
		update t_ticket
		set favour = favour + 1 where id = #{id}
	</update>

	<select id="findHaveTicket" parameterType="java.lang.String"
		resultType="java.lang.Long">
		select ifnull(id,0) from t_ticket where union_id =
		#{unionId} limit 1
	</select>

	<select id="findIfHaveTicket" parameterType="cn.ichazuo.model.table.Ticket"
		resultType="java.lang.Long">
		select ifnull(id,0) from t_ticket where union_id =
		#{unionId} and parent_id= #{parentId} and top_parent_id=
		#{topParentId} limit 1
	</select>

	<update id="updateTicketStatus" parameterType="java.util.Map">
		update t_ticket
		set status = #{status} where union_id = #{unionId}
	</update>

	<!-- 查询课程评论50条 -->
	<select id="findOnlineCourseCommentLimit50" parameterType="java.lang.Long"
		resultType="cn.ichazuo.model.app.OnlineCourseCommentInfo">
		select c.id,c.content,if(c.avatar!='',c.avatar,m.avatar) as
		avatar,if(c.nick_name!='',c.nick_name,m.nick_name) as
		nickName,c.create_at as createAt
		from t_course_online_comment c left join t_member m on m.id = c.member_id
		where 1=1 and c.status = 1 and m.status = 1
		and c.course_id =
		#{courseId}
		order by c.create_at desc limit 50
	</select>

	<!-- 修改网页课程点击数量 -->
	<update id="updateWebCourseClickNumber" parameterType="java.lang.Long">
		update
		t_course set web_click_number = web_click_number + 1 where id = #{id}
	</update>

	<!-- 查询最大版本号 -->
	<select id="findAppVersionMax" parameterType="java.lang.String"
		resultType="cn.ichazuo.model.table.Version">
		select id,version,weight,create_at as
		createAt,client,status from t_version where client = #{client} order
		by weight desc limit 1
	</select>

	<!-- 查询当前版本号 -->
	<select id="findAppVersionByMap" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Version">
		select id,version,weight,create_at as
		createAt,client,status from t_version where client = #{client} and
		version=#{version} limit 1
	</select>
	<!-- 查询企业App最大版本号 -->
	<select id="findBusinessAppVersionMax" parameterType="java.lang.String"
		resultType="cn.ichazuo.model.table.BusinessVersion">
		select id,version,weight,create_at as
		createAt,client,status,address from t_business_version where client =
		#{client} order by weight desc limit 1
	</select>

	<!-- 查询当前版本号 -->
	<select id="findBusinessAppVersionByMap" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.BusinessVersion">
		select id,version,weight,create_at as
		createAt,client,status from t_business_version where client =
		#{client} and version=#{version} limit 1
	</select>

	<update id="updateWebOrderFelicitate" parameterType="java.lang.String">
		update
		t_course_web_order set felicitate = felicitate + 1 where order_code =
		#{code}
	</update>

	<select id="findFelicitateCount" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select ifnull(felicitate,0) from t_course_web_order where
		order_code = #{code} limit 1
	</select>

	<update id="updateWebOrderFelicitates" parameterType="java.lang.Long">
		update
		t_course_web_order set felicitate = felicitate + 1 where id = #{id}
	</update>
	<update id="updateWebCrowdFelicitates" parameterType="java.lang.Long">
		update
		t_course_web_crowdfunding set felicitate = felicitate + 1 where id =
		#{id}
	</update>

	<select id="getWebJobList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.WebJobInfo">
		select j.id,j.job_name as
		jobName,j.pay,j.tag,j.tags,j.type_id as typeId,i.`value` as
		typeName,j.cover,
		j.create_at as
		createAt,j.address,j.email,j.company,j.avatar
		from t_job j left join s_dict_item i on i.id = j.type_id where j.`status`
		= 1
		order by j.create_at desc
		limit #{page},#{pageCount}
	</select>
	<select id="getWebJobInfo" parameterType="java.lang.Long"
		resultType="cn.ichazuo.model.app.WebJobInfo">
		select j.id,j.job_name as
		jobName,j.pay,j.tag,j.tags,j.type_id as typeId,i.`value` as
		typeName,j.cover,
		j.create_at as
		createAt,j.address,j.email,j.company,j.avatar,j.content
		from t_job j left join s_dict_item i on i.id = j.type_id where j.`status`
		= 1
		and j.id = #{id} limit 1
	</select>

	<select id="getQRCodeURL" parameterType="java.lang.Long"
		resultType="java.lang.String">
		select ifnull(qrcode,"") from t_course where id = #{id}
	</select>

	<!-- 查询试题列表 -->
	<select id="getQuestionList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.QuestionListInfo">
		select q.id , q.title, q.create_at as createAt, q.update_at
		as updateAt,q.status
		from t_question_first_type q
		where q.status = 1
		order by q.create_at desc
		limit #{page},#{pageCount}
	</select>
	<!-- 查询试题子目录列表 -->
	<select id="getQuestionChildList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.QuestionListInfo">
		select q.id , q.title ,q.parent_id as parentId ,q.create_at as
		createAt,q.update_at as updateAt,q.status,q.number
		from t_question_second_type q
		where q.parent_id = #{id} and q.status=1
		order by q.create_at desc
	</select>
	<!-- 根据二级目录 id的值取相应的题目 -->
	<select id="getChildQuestionsById" resultType="cn.ichazuo.model.table.Question">
		select
		id,a,b,c,d,title,answer,type,user_name as userName
		from t_question
		where status = 1 and parent_id= #{id}
	</select>
	<!-- ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ 企业 App ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ -->
	<select id="findCatalogList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.subtitle as
		subtitle,j.create_at as createAt,j.update_at as updateAt,j.exam_id as
		examId,j.exam_name as examName,a.number,j.avatar,
		(SELECT COUNT(*) FROM
		t_course_online o LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN
		t_play_address p ON p.id = o.play_address_id JOIN
		t_business_catalog_course a ON a.course_id = t.id
		WHERE 1 = 1 AND o.
		STATUS = 1 AND t.business_hidden = 0 AND a.catalog_id = j.id and now() >= o.play_begin_time and
		a.`status` = 1) AS courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_catalog_course a JOIN t_course b ON a.course_id = b.id
		where 1=1 AND a.`status` = 1 AND b.`status` = 1 AND a.catalog_id =
		j.id) AS studyCount
		from t_business_catalog as j LEFT JOIN t_question_second_type a ON a.id =
		j.exam_id where j.`status` = 1 and j.id!=1 and j.type = 0
		order by j.weight desc
		limit #{page},#{pageCount}
	</select>
	
	<select id="findCatalogListCount" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.subtitle as
		subtitle,j.create_at as createAt,j.update_at as updateAt,j.exam_id as
		examId,j.exam_name as examName,a.number,j.avatar,
		(SELECT COUNT(*) FROM
		t_course_online o LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN
		t_play_address p ON p.id = o.play_address_id JOIN
		t_business_catalog_course a ON a.course_id = t.id
		WHERE 1 = 1 AND o.
		STATUS = 1 AND t.business_hidden = 0 AND a.catalog_id = j.id and now() >= o.play_begin_time and
		a.`status` = 1) AS courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_catalog_course a JOIN t_course b ON a.course_id = b.id
		where 1=1 AND a.`status` = 1 AND b.`status` = 1 AND a.catalog_id =
		j.id) AS studyCount
		from t_business_catalog as j LEFT JOIN t_question_second_type a ON a.id =
		j.exam_id where j.`status` = 1 and j.id!=1 and j.type = 0
		order by j.weight desc
	</select>
	<!-- 查询讲师列表 -->
	<select id="findTeacherList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Teacher">
		SELECT a.id,a.`name`,a.title,a.info,a.content,a.avatar,a.weight,a.job,a.cover,a.bewrite,b.id as catalogId,b.`name` as catalogName,b.flag FROM
		t_teacher	a left join t_business_catalog b ON a.catalog_id = b.id WHERE	a.`status` = 1 and a.app_hidden=0 order by a.weight desc
		limit #{page},#{pageCount}
	</select>
	
	<!-- 查询讲师列表 -->
	<select id="getTeacherListForWeb" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Teacher">
		SELECT a.id,a.`name`,a.title,a.info,a.content,a.avatar,a.weight,a.job,a.cover,a.bewrite,b.id as catalogId,b.`name` as catalogName,b.flag FROM
		t_teacher	a left join t_business_catalog b ON a.catalog_id = b.id WHERE	a.`status` = 1 and a.web_hidden=0 order by a.weight desc
		limit #{page},#{pageCount}
	</select>
	
	<!-- 查询讲师列表 -->
	<select id="getTeacherListForDaKe" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Teacher">
		SELECT a.id,a.`name`,a.title,a.info,a.content,a.avatar,a.weight,a.job,a.cover,a.bewrite,b.id as catalogId,b.`name` as catalogName,b.flag FROM
		t_teacher	a left join t_business_catalog b ON a.catalog_id = b.id WHERE	a.`status` = 1 and a.is_hidden=0 order by a.weight desc
		limit #{page},#{pageCount}
	</select>
	<!-- 查询讲师列表 -->
	<select id="findTeacherById" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Teacher">
		SELECT a.id,a.`name`,a.title,a.info,a.content,a.avatar,a.cover1,a.weight,a.job,a.cover,a.bewrite,b.id as catalogId,b.`name` as catalogName,b.flag FROM
		t_teacher	a left join t_business_catalog b ON a.catalog_id = b.id WHERE	a.`status` = 1 and a.id=#{id}
	</select>
	<!-- 查询讲师列表 -->
	<select id="findAppTeacherList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Teacher">
		SELECT a.id,a.`name`,a.title,a.info,a.content,a.avatar,a.weight,a.job,a.cover,a.bewrite,b.id as catalogId,b.`name` as catalogName,b.flag FROM
		t_teacher	a left join t_business_catalog b ON a.catalog_id = b.id WHERE	a.`status` = 1  and a.app_hidden=0 order by a.weight desc
		limit #{page},#{pageCount}
	</select>
		<!-- 查询讲师列表 -->
	<select id="queryTeacherList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Teacher">
		SELECT a.id,a.`name`,a.title,a.info,a.content,a.avatar,a.weight,a.job,a.cover,a.bewrite,b.id as catalogId,b.`name` as catalogName,b.flag FROM
		t_teacher	a left join t_business_catalog b ON a.catalog_id = b.id WHERE	a.`status` = 1 and app_hidden = 0
		limit #{page},#{pageCount}
	</select>
	<!-- 查询同学录列表 -->
	<select id="findStudentList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Student">
		SELECT id,`name`,title,`status`,content,cover,weight,job,industry,bewrite,city FROM t_student WHERE `status` = 1
		order by weight desc
		limit #{page},#{pageCount}
	</select>
	<select id="findCatalogListCourseCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT case when count(*) is null then 0 else count(*) end
		FROM t_course_online o LEFT JOIN t_course t ON t.id = o.course_id LEFT
		JOIN t_play_address p ON p.id = o.play_address_id JOIN
		t_business_catalog_course a ON a.course_id = t.id WHERE 1 = 1 AND o.
		STATUS = 1 AND t.business_hidden = 0 AND a.catalog_id = #{catalogId}
		AND a.`status` = 1 and now() >= o.play_begin_time
	</select>
	<select id="findCatalogListStudyCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT case when sum(b.studynum) is null then 0 else
		sum(b.studynum) end FROM t_business_catalog_course a JOIN t_course b
		ON a.course_id = b.id where 1=1 AND a.`status` = 1 AND b.`status` = 1
		AND a.catalog_id = #{catalogId}
	</select>
	<select id="findParentCatalogList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.subtitle as
		subtitle,j.create_at as createAt,j.flag,j.price,j.update_at as
		updateAt,j.exam_id as examId,j.total as total,j.exam_name as
		examName,a.number,j.avatar,j.teacher_id as teacherId,j.teacher_name as teacherName,j.update_mark as updateMark,
		(SELECT COUNT(*) FROM t_course_online o
		LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p
		ON p.id = o.play_address_id JOIN t_business_second_catalog_course a ON
		a.course_id = t.id JOIN t_business_catalog_second c ON c.id =
		a.catalog_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		and a.`status` = 1 and c.`status` = 1 AND c.parent_id = j.id) AS
		courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_second_catalog_course a JOIN t_business_catalog_second c ON
		c.id = a.catalog_id JOIN t_course b ON a.course_id = b.id where
		c.parent_id = j.id AND a.`status` = 1 AND b.`status` = 1) AS
		studyCount
		from t_business_catalog as j LEFT JOIN t_question_second_type a ON a.id =
		j.exam_id where j.`status` = 1 and j.id != 1 and j.type=0 and j.weight !=0
		order by j.weight desc
		limit #{page},#{pageCount}
	</select>
	<select id="findBuyParentCatalogList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.subtitle as
		subtitle,j.create_at as createAt,j.flag,j.price,j.update_at as
		updateAt,j.exam_id as examId,j.total as total,j.exam_name as
		examName,a.number,j.avatar,j.teacher_id as teacherId,j.teacher_name as teacherName,j.update_mark as updateMark,
		(SELECT COUNT(*) FROM t_course_online o
		LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p
		ON p.id = o.play_address_id JOIN t_business_second_catalog_course a ON
		a.course_id = t.id JOIN t_business_catalog_second c ON c.id =
		a.catalog_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		and a.`status` = 1 and c.`status` = 1 AND c.parent_id = j.id) AS
		courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_second_catalog_course a JOIN t_business_catalog_second c ON
		c.id = a.catalog_id JOIN t_course b ON a.course_id = b.id where
		c.parent_id = j.id AND a.`status` = 1 AND b.`status` = 1) AS
		studyCount
		from t_business_catalog as j LEFT JOIN t_question_second_type a ON a.id =
		j.exam_id join t_business_member_record c on c.catalog_id = j.id where j.`status` = 1 and j.id != 1 and j.type=0 and j.weight !=0
		and c.type=1 and c.status=1 and c.employee_id = #{employeeId}
		order by c.create_at desc
	</select>
	<select id="findOtherParentCatalogList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.subtitle as
		subtitle,j.create_at as createAt,j.flag,j.update_at as
		updateAt,j.exam_id as examId,j.total as total,j.price,j.exam_name as
		examName,a.number,j.avatar,j.teacher_id as teacherId,j.teacher_name as teacherName,j.update_mark as updateMark,
		(SELECT COUNT(*) FROM t_course_online o
		LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p
		ON p.id = o.play_address_id JOIN t_business_second_catalog_course a ON
		a.course_id = t.id JOIN t_business_catalog_second c ON c.id =
		a.catalog_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		and a.`status` = 1 and c.`status` = 1 AND c.parent_id = j.id) AS
		courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_second_catalog_course a JOIN t_business_catalog_second c ON
		c.id = a.catalog_id JOIN t_course b ON a.course_id = b.id where
		c.parent_id = j.id AND a.`status` = 1 AND b.`status` = 1) AS
		studyCount
		from t_business_catalog as j LEFT JOIN t_question_second_type a ON a.id =
		j.exam_id where j.`status` = 1 and j.id != 1 and j.type=0 and j.weight !=0
		and j.id not in(select catalog_id from t_business_member_record where employee_id = #{employeeId} and status = 1 and type=1)
		order by j.weight desc
	</select>
	<select id="findParentVideoCatalogList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.subtitle as
		subtitle,j.create_at as createAt,j.flag,j.update_at as
		updateAt,j.exam_id as examId,j.total as total,j.price,j.exam_name as
		examName,a.number,j.avatar,j.teacher_id as teacherId,j.teacher_name as teacherName,j.update_mark as updateMark,
		(SELECT COUNT(*) FROM t_course_online o
		LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p
		ON p.id = o.play_address_id JOIN t_business_second_catalog_course a ON
		a.course_id = t.id JOIN t_business_catalog_second c ON c.id =
		a.catalog_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		and a.`status` = 1 and c.`status` = 1 AND c.parent_id = j.id) AS
		courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_second_catalog_course a JOIN t_business_catalog_second c ON
		c.id = a.catalog_id JOIN t_course b ON a.course_id = b.id where
		c.parent_id = j.id AND a.`status` = 1 AND b.`status` = 1) AS
		studyCount
		from t_business_catalog as j LEFT JOIN t_question_second_type a ON a.id =
		j.exam_id where j.`status` = 1 and j.id != 1 and j.type=2 and j.weight !=0
		order by j.weight desc
		limit #{page},#{pageCount}
	</select>
	<select id="findParentCatalogListCount" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.subtitle as
		subtitle,j.create_at as createAt,j.flag,j.update_at as
		updateAt,j.exam_id as examId,j.total as total,j.exam_name as
		examName,a.number,j.avatar,j.teacher_id as teacherId,j.teacher_name as teacherName,j.update_mark as updateMark,
		(SELECT COUNT(*) FROM t_course_online o
		LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p
		ON p.id = o.play_address_id JOIN t_business_second_catalog_course a ON
		a.course_id = t.id JOIN t_business_catalog_second c ON c.id =
		a.catalog_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		and a.`status` = 1 and c.`status` = 1 AND c.parent_id = j.id) AS
		courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_second_catalog_course a JOIN t_business_catalog_second c ON
		c.id = a.catalog_id JOIN t_course b ON a.course_id = b.id where
		c.parent_id = j.id AND a.`status` = 1 AND b.`status` = 1) AS
		studyCount
		from t_business_catalog as j LEFT JOIN t_question_second_type a ON a.id =
		j.exam_id where j.`status` = 1 and j.id != 1 and j.type=0 and j.weight !=0
		order by j.weight desc
	</select>
	<!-- 根据学员ID查询学员是否有年费会员信息存在  -->
	<select id="findMemberRecordList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.MemberRecord">
		select id,employee_id as employeeId,catalog_id as catalogId,type,create_at as createAt,expiry_date as expiryDate,end_date as endDate,course_id as courseId from t_business_member_record where employee_id = #{employeeId} and type =0 and status=1
	</select>
	<select id="queryAllEmployee" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Employee">
		select id,mobile from t_business_employee where status=1 and province is null order by id desc
	</select>
	<!-- 根据学员ID查询学员是否有年费会员信息存在  -->
	<select id="findRecommendList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.RecommendInfo">
		select r.version,r.os,r.weight,r.postion from t_haoduoke_recommend_info as r
		where r.target_id = #{targetId} and r.target_type =#{targetType} and r.status=1 and r.postion=5
	</select>
	<!-- 根据学员ID查询学员是否有年费会员信息存在  -->
	<select id="findMemberRecordListByEmployeeId" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.MemberRecord">
		select id,employee_id as employeeId,catalog_id as catalogId,type,create_at as createAt,expiry_date as expiryDate,end_date as endDate,course_id as courseId from t_business_member_record where employee_id = #{employeeId} and (type =1 or type=2) and status=1 and (gain_way=0 or gain_way=2 or gain_way=5) order by id desc
	</select>
	<!-- 根据学员ID查询学员是否有年费会员信息存在  -->
	<select id="findMemberRecordListByEmployeeId1" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.MemberRecord">
		select  distinct(catalog_id) as catalogId from t_business_member_record where employee_id = #{employeeId} and type =1 and status=1 
		and catalog_id in (231,230,229,228,227,226,225,224,223,222,221,220,219,218,217,214,213,212,211,209) 
	</select>
	<!-- 根据学员ID和课程包ID查询学员是否系列课会员购买信息存在  -->
	<select id="findMemberRecordListByCatalogId" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.MemberRecord">
		select id,employee_id as employeeId,catalog_id as catalogId,type,create_at as createAt,expiry_date as expiryDate,end_date as endDate,course_id as courseId from t_business_member_record where employee_id = #{employeeId} and catalog_id =#{catalogId} and status=1
	</select>
	
	<!-- 查询包含讲师的课程包 -->
	<select id="findParentCatalogListByTeacher" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.list_cover as listCover,j.subtitle as
		subtitle,j.cover as cover,j.create_at as createAt,j.flag,j.update_at as
		updateAt,j.exam_id as examId,j.total as total,j.type,j.price,j.exam_name as
		examName,a.number,j.avatar,j.teacher_id as teacherId,j.teacher_name as teacherName,j.update_mark as updateMark,
		(SELECT COUNT(*) FROM t_course_online o
		LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p
		ON p.id = o.play_address_id JOIN t_business_second_catalog_course a ON
		a.course_id = t.id JOIN t_business_catalog_second c ON c.id =
		a.catalog_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		and a.`status` = 1 and c.`status` = 1 AND c.parent_id = j.id) AS
		courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_second_catalog_course a JOIN t_business_catalog_second c ON
		c.id = a.catalog_id JOIN t_course b ON a.course_id = b.id where
		c.parent_id = j.id AND a.`status` = 1 AND b.`status` = 1) AS
		studyCount
		from t_business_catalog as j LEFT JOIN t_question_second_type a ON a.id =
		j.exam_id where j.`status` = 1 and j.id != 1 and (j.type=0 or j.type=2) and j.teacher_name like#{teacherName} and j.weight!=0
		order by j.weight desc
		limit #{page},#{pageCount}
	</select>
	<select id="findParentCatalogListById" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.pay_status as payStatus,j.subtitle as
		subtitle,j.catalog_content as catalogContent,j.create_at as createAt,j.flag,j.update_at as
		updateAt,j.total as total,j.exam_id as examId,j.list_cover as listCover,j.exam_name as
		examName,a.number,j.avatar,j.cover,j.teacher_id as teacherId,j.teacher_name as teacherName,j.update_mark as updateMark,j.price,j.course_id as courseId,
		(SELECT COUNT(*) FROM t_course_online o
		LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p
		ON p.id = o.play_address_id JOIN t_business_second_catalog_course a ON
		a.course_id = t.id JOIN t_business_catalog_second c ON c.id =
		a.catalog_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		and a.`status` = 1 and c.`status` = 1 AND c.parent_id = j.id) AS
		courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_second_catalog_course a JOIN t_business_catalog_second c ON
		c.id = a.catalog_id JOIN t_course b ON a.course_id = b.id where
		c.parent_id = j.id AND a.`status` = 1 AND b.`status` = 1) AS
		studyCount
		from t_business_catalog as j LEFT JOIN t_question_second_type a ON a.id =
		j.exam_id where j.`status` = 1 and j.id != 1 and j.id=#{id}
	</select>
	<select id="findTeacherParentCatalogById" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.subtitle as
		subtitle,j.create_at as createAt,j.flag,j.update_at as
		updateAt,j.exam_id as examId,j.exam_name as
		examName,a.number,j.avatar,j.teacher_id as teacherId,j.teacher_name as teacherName,j.update_mark as updateMark,
		(SELECT COUNT(*) FROM t_course_online o
		LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p
		ON p.id = o.play_address_id JOIN t_business_second_catalog_course a ON
		a.course_id = t.id JOIN t_business_catalog_second c ON c.id =
		a.catalog_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		and a.`status` = 1 and c.`status` = 1 AND c.parent_id = j.id) AS
		courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_second_catalog_course a JOIN t_business_catalog_second c ON
		c.id = a.catalog_id JOIN t_course b ON a.course_id = b.id where
		c.parent_id = j.id AND a.`status` = 1 AND b.`status` = 1) AS
		studyCount
		from t_business_catalog as j LEFT JOIN t_question_second_type a ON a.id =
		j.exam_id where j.`status` = 1 and j.id != 1 and j.id=#{id}
	</select>
	<!-- 根据一级分类Id查询二级分类 -->
	<select id="findSecondCatalogList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.SecondCatalog">
		select j.id as id,j.name as name,j.subtitle as
		subtitle,j.create_at as createAt,j.update_at as updateAt,j.exam_id as
		examId,j.exam_name as examName,a.number,j.avatar,
		(SELECT COUNT(*) FROM
		t_course_online o LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN
		t_play_address p ON p.id = o.play_address_id JOIN
		t_business_second_catalog_course a ON a.course_id = t.id
		WHERE 1 = 1
		AND o. STATUS = 1 AND t.business_hidden = 0 AND a.catalog_id = j.id and now() >= o.play_begin_time
		and a.`status` = 1) AS courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_second_catalog_course a JOIN t_course b ON a.course_id =
		b.id where a.catalog_id = j.id AND a.`status` = 1 AND b.`status` = 1)
		AS studyCount
		from t_business_catalog_second as j LEFT JOIN t_question_second_type a ON
		a.id = j.exam_id where j.`status` = 1 AND j.parent_id = #{parentId}
		order by j.weight desc
		limit #{page},#{pageCount}
	</select>

	<select id="findPersonCatalogList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.subtitle as
		subtitle,j.create_at as createAt,j.update_at as updateAt,j.update_mark as updateMark,
		(SELECT
		COUNT(*) FROM t_course_online o LEFT JOIN t_course t ON t.id =
		o.course_id LEFT JOIN t_play_address p ON p.id = o.play_address_id
		JOIN t_business_catalog_course a ON a.course_id = t.id
		WHERE 1 = 1 AND
		o. STATUS = 1 AND t.business_hidden = 0 AND a.catalog_id = j.id and now() >= o.play_begin_time and
		a.`status` = 1) AS courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_catalog_course a JOIN t_course b ON a.course_id = b.id
		where a.catalog_id = j.id AND a.`status` = 1 AND b.`status` = 1) AS
		studyCount
		from t_business_catalog as j where j.`status` = 1 and j.id =9
		order by j.create_at desc
		limit #{page},#{pageCount}
	</select>
	<select id="getAllCatalogCourseList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT	t.id,	t.cover,t.avatar,t.course_name AS courseName,o.end_status AS playStatus,o.teacher,o.isnew,
		o.time_length AS timeLength,t.subtitle,t.exam_id AS examId,t.exam_name AS examName,b.number,o.pdf_address AS pdfAddress,
		t.if_title AS ifTitle,IF (
		now() > o.play_end_time || p.address_url = '',
		o.play_address,
		p.address_url
		) AS playAddress,
 		o.tag,IF (
		now() > o.play_end_time || p.address_url = '',
		o.play_address,
		p.address_web_url
		) AS playAddressM3u8, o.create_at AS createAt, o.play_begin_time AS playStartTime,o.play_end_time AS playEndTime,o.time_length AS timeLength,
 		o.is_video AS isVideo,o.price,t.studynum AS studyNum FROM t_course_online o LEFT JOIN t_course t ON t.id = o.course_id
		LEFT JOIN t_play_address p ON p.id = o.play_address_id
		JOIN t_business_second_catalog_course a ON a.course_id = t.id
		LEFT JOIN t_question_second_type b ON b.id = t.exam_id
		LEFT JOIN t_business_catalog_second z ON z.id = a.catalog_id
		WHERE	1 = 1 AND o. STATUS = 1 AND a. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		AND z.parent_id = #{catalogId} 
		<if test="parentId != null">
			AND a.catalog_id = #{parentId}  
		</if>
		ORDER BY z.weight,a.weight DESC
	</select>
	<select id="getCatalogCourseList" parameterType="java.lang.Long"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT a.catalog_id as
		catalogId,o.isnew,t.id,t.cover,t.avatar,t.course_name AS
		courseName,o.end_status AS playStatus,o.isnew,o.teacher,o.time_length AS
		timeLength,t.subtitle,t.exam_id AS examId,t.exam_name as
		examName,b.number,o.pdf_address as pdfAddress,t.if_title as ifTitle,
		o.play_address AS playAddress, o.tag,o.play_address AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id JOIN t_business_catalog_course a ON a.course_id =
		t.id left join t_question_second_type b on b.id=t.exam_id
		where 1= 1 AND o. STATUS = 1 AND a. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		and a.catalog_id= #{id} ORDER BY a.weight DESC
	</select>
	<!-- 根据购买时间查询听课时间在购买时间之后的课程 -->
	<select id="getCatalogCourseListByBuyDate" parameterType="java.lang.Long"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT a.catalog_id as
		catalogId,o.isnew,t.id,t.cover,t.avatar,t.course_name AS
		courseName,o.end_status AS playStatus,o.isnew,o.teacher,o.time_length AS
		timeLength,t.subtitle,t.exam_id AS examId,t.exam_name as
		examName,b.number,o.pdf_address as pdfAddress,t.if_title as ifTitle,
		IF (now() >
		o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS
		playAddress, o.tag,IF (now() > o.play_end_time || p.address_url =
		'',o.play_address, p.address_web_url) AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id JOIN t_business_catalog_course a ON a.course_id =
		t.id left join t_question_second_type b on b.id=t.exam_id
		where 1= 1 AND o. STATUS = 1 AND a. STATUS = 1 AND t.business_hidden = 0
		and a.catalog_id= #{catalogId} and o.play_begin_time >#{time} and o.course_id not in #{courseIds} ORDER BY a.weight DESC
	</select>
	
	<select id="findHotCatalogList" parameterType="java.lang.Long"
		resultType="cn.ichazuo.model.table.Catalog">
		SELECT	a.id,	a.`name`,	a.subtitle,	a.exam_id AS examId,	a.exam_name AS examName,	a.avatar,	b.number FROM	t_business_catalog a JOIN t_question_second_type b ON a.exam_id = b.id WHERE	a.id = 1	</select>
	<select id="getSecondCatalogCourseList" parameterType="java.lang.Long"
		resultType="cn.ichazuo.model.app.SecondCatalogCourseList">
		SELECT DISTINCT a.catalog_id as
		catalogId,t.id,t.cover,t.avatar,t.course_name AS
		courseName,o.isnew,o.end_status AS playStatus,o.teacher,o.time_length AS
		timeLength,t.subtitle,t.exam_id AS examId,t.exam_name as
		examName,b.number,o.pdf_address as pdfAddress,t.if_title as ifTitle,
		o.play_address AS playAddress,o.tag,o.play_address AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id JOIN t_business_second_catalog_course a ON
		a.course_id = t.id left join t_question_second_type b on
		b.id=t.exam_id
		where 1= 1 AND o. STATUS = 1 AND a. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		and a.catalog_id= #{id} ORDER BY a.weight DESC
	</select>
	<!-- 修改课程学习完成人数 -->
	<update id="addStudyNumber" parameterType="java.lang.Long">
		update t_course set
		studynum = studynum + 1 where id = #{id}
	</update>
	<!-- 添加学员学习详细记录 -->
	<insert id="addStudyDetail" parameterType="java.util.Map"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		t_business_study(course_id,employee_id,study_time,create_at,is_finished,status)
		values(#{courseId},#{employeeId},#{studyTime},now(),#{isFinished},#{status})
	</insert>
	
	<!-- 添加学员学习详细记录 -->
	<insert id="addStudyReport" parameterType="java.util.Map"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		t_business_study_report(employee_id,study_time,type)
		values(#{employeeId},#{studyTime},#{type})
	</insert>
	<!-- 修改课程学习完成人数 -->
	<update id="updateStudyReportById" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
		update t_business_study_report set
		study_time = study_time + #{studyTime} where id = #{id}
	</update>
	<insert id="addStudyDetailHistory" parameterType="java.util.Map"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		t_business_study_request_history(course_id,employee_id,study_time,create_at,is_finished,client,version)
		values(#{courseId},#{employeeId},#{studyTime},now(),#{isFinished},#{client},#{version})
	</insert>
	<select id="findStudyDetail" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.StudyDetail">
		select * from t_business_study s where s.is_finished =
		#{isFinished} and s.course_id=#{courseId} and
		s.employee_id=#{employeeId}
	</select>
	<select id="findStudyReport" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.StudyReport">
		select s.employee_id as employeeId,s.id as id,s.study_time as studyTime,s.type from t_business_study_report s where s.type =
		#{type} and s.employee_id=#{employeeId}
	</select>
	
	<!-- 查询满足条件的课程列表 -->
	<select id="findCatalogCourseList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT t.id,t.cover,t.avatar,t.course_name AS
		courseName,o.end_status AS playStatus,o.teacher,o.time_length AS
		timeLength,t.subtitle,t.exam_id as examId,t.exam_name as
		examName,b.number,t.if_title as ifTitle,
		IF (now() > o.play_end_time || p.address_url =
		'',o.play_address,p.address_url) AS playAddress, o.tag,IF (now() >
		o.play_end_time || p.address_url = '',o.play_address,
		p.address_web_url) AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id left join t_question_second_type b on b.id=t.exam_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		<if test="keyWords != null">
			and o.online_type_id = #{keyWords}
		</if>
		<if test="timeLength != null">
			and o.time_length >= #{timeLength} and #{max} >=
			o.time_length
		</if>
		<if test="level != null">
			and t.level = #{level}
		</if>
		ORDER BY t.studynum DESC
		limit #{page},#{pageCount}
	</select>
	<!-- 查询满足条件的课程列表 -->
	<select id="findCatalogCourseListByType" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT t.id,t.cover,t.avatar,t.course_name AS
		courseName,o.end_status AS playStatus,o.teacher,o.time_length AS
		timeLength,t.subtitle,o.pdf_address as pdfAddress,t.if_title as ifTitle,o.isnew,
		t.exam_id AS examId,
		t.exam_name AS examName,
		c.number,
		IF (now() >
		o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS
		playAddress, o.tag,IF (now() > o.play_end_time || p.address_url =
		'',o.play_address, p.address_web_url) AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id join t_business_course z ON z.course_id = t.id JOIN
		t_business_second_type a ON a.id = z.parent_id JOIN
		t_business_first_type b ON b.id = a.parent_id
		LEFT JOIN t_question_second_type c ON t.exam_id = c.id
		WHERE 1 = 1 AND o. STATUS
		= 1 and now() >= o.play_begin_time AND t.business_hidden = 0 AND a.`status` =1 AND b.`status` = 1 AND z.`status` = 1
		<if test="firstTypeId != null">
			and b.id = #{firstTypeId}
			<if test="secondTypeId != null">
				and a.id = #{secondTypeId}
			</if>
		</if>
		<if test="timeLength != null">
			and o.time_length >= #{timeLength} and #{max} >=
			o.time_length
		</if>
		<if test="level != null">
			and t.level = #{level}
		</if>
		ORDER BY t.studynum DESC
		limit #{page},#{pageCount}
	</select>
	<!-- 查询满足条件的课程列表 -->
	<select id="findPersonCatalogCourseList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT t.id,t.cover,t.avatar,t.course_name AS courseName,o.end_status
		AS playStatus,o.teacher,o.time_length AS timeLength,t.subtitle,
		IF
		(now() > o.play_end_time || p.address_url =
		'',o.play_address,p.address_url) AS playAddress, o.tag,IF (now() >
		o.play_end_time || p.address_url = '',o.play_address,
		p.address_web_url) AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id JOIN t_business_catalog_course a ON a.course_id =
		t.id
		WHERE 1 = 1 and now() >= o.play_begin_time AND o. STATUS = 1 AND t.business_hidden = 0 AND
		a.catalog_id = 9
		<if test="keyWords != null">
			and o.online_type_id = #{keyWords}
		</if>
		<if test="timeLength != null">
			and o.time_length >= #{timeLength} and #{max} >=
			o.time_length
		</if>
		<if test="level != null">
			and t.level = #{level}
		</if>
		ORDER BY t.studynum DESC
		limit #{page},#{pageCount}
	</select>
	<!-- 查询满足条件的课程列表 -->
	<select id="findPersonCatalogCourseListByType" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT t.id,t.cover,t.avatar,t.course_name AS courseName,o.end_status
		AS playStatus,o.teacher,o.time_length AS timeLength,t.subtitle,
		IF
		(now() > o.play_end_time || p.address_url =
		'',o.play_address,p.address_url) AS playAddress, o.tag,IF (now() >
		o.play_end_time || p.address_url = '',o.play_address,
		p.address_web_url) AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id JOIN t_business_catalog_course a ON a.course_id =
		t.id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 AND
		a.catalog_id = 9
		<if test="keyWords != null">
			and o.online_type_id = #{keyWords}
		</if>
		<if test="timeLength != null">
			and o.time_length >= #{timeLength} and #{max} >=
			o.time_length
		</if>
		<if test="level != null">
			and t.level = #{level}
		</if>
		ORDER BY t.studynum DESC
		limit #{page},#{pageCount}
	</select>
	<!-- 查询数据字典列表 -->
	<select id="findDictItemList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.DictItem">
		select s.value,s.weight,s.id from s_dict_item s left join
		s_dict d on s.dict_id = d.id where s.`status` = 1 and d.`code` =
		'ONLINECOURSETYPE'
		order by s.weight desc
		limit #{page},#{pageCount}
	</select>
	<!-- 添加学员学习计划 -->
	<insert id="saveStudyPlan" parameterType="java.util.Map"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		t_business_study_plan(course_id,employee_id,create_at,status)
		values(#{courseId},#{employeeId},now(),#{status})
	</insert>
	
		<!-- 添加学员学习计划 -->
	<insert id="saveStudyPlanCatalog" parameterType="java.util.Map"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		t_business_study_plan_catalog(course_id,employee_id,create_at,status)
		values(#{courseId},#{employeeId},now(),#{status})
	</insert>
	<!-- 添加学员购买会员的记录 -->
	<insert id="addMemberPayDetail" parameterType="java.util.Map"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		t_business_member_pay(employee_id,price,create_at,status,member_type,month)
		values(#{employeeId},#{price},now(),0,#{memberType},#{month})
	</insert>
	<!-- 查询学员购买会员的记录 -->
	<select id="queryMemberPayDetail" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.MemberPayInfo">
		select s.id,s.price,s.employee_id as employeeId,s.create_at
		as createAt,s.month from t_business_member_pay s where s.`status` = 0
		and s.employee_id = #{employeeId} order by s.id desc limit 1
	</select>
	<!-- 根据学员ID查询购买会员的月份总数 -->
	<select id="queryMonthCountByEmployeeId" parameterType="java.util.Map"
		resultType="java.lang.Long">
		select ifnull(sum(o. MONTH),0) from t_business_member_pay o
		where o.status = 1 and o.employee_id = #{employeeId}
	</select>
	<!-- 查询学员购买会员的记录 -->
	<select id="queryMemberPayByEmployeeId" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.MemberPayInfo">
		select s.id,s.price,s.employee_id as employeeId,s.create_at
		as createAt,s.month from t_business_member_pay s where s.`status` = 1
		and s.employee_id = #{employeeId} order by s.id asc limit 1
	</select>
	<!-- 修改购买会员的订单状态 -->
	<update id="updateMemberPay" parameterType="java.lang.Long">
		update
		t_business_member_pay set status = 1 ,update_at = now() where id =
		#{id}
	</update>
	<!-- 查询学习计划是否已存在 -->
	<select id="queryStudyPlan" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.StudyPlan">
		select * from t_business_study_plan where employee_id =
		#{employeeId} and course_id = #{courseId} and status = 1
	</select>
	<!-- 查询选课计划是否已存在 -->
	<select id="queryIsChoose" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.MemberSeries">
		select * from t_haoduoke_member_series where employee_id =
		#{employeeId} and catalog_id = #{catalogId} and status = 1
	</select>
	<!-- 查询学习计划是否已存在 -->
	<select id="queryStudyDetailHistory" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.StudyDetailHistory">
		select *  from t_business_study_request_history  where TIME_TO_SEC(TIMEDIFF(now(),create_at)) between 0 and 60
		and employee_id = #{employeeId} and is_finished = 2
	</select>
	<!-- 查询学员答题记录是否已存在 -->
	<select id="queryAnswerHistory" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.BusinessTicket">
		select * from t_business_ticket where member_id =
		#{employeeId} and parent_id = #{examId} and status = 1
	</select>
	<!-- 查询学习计划是否已存在 -->
	<select id="queryStudyPlanCatalog" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.StudyPlanCatalog">
		select * from t_business_study_plan_catalog where employee_id =
		#{employeeId} and course_id = #{courseId} and status = 1
	</select>
	<!-- 查询学习计划是否之前存在过 -->
	<select id="queryStudyPlanExist" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.StudyPlan">
		select is_finished as isFinished,id from
		t_business_study_plan where employee_id = #{employeeId} and course_id
		= #{courseId}
	</select>
	<!-- 查询学习计划是否之前存在过 -->
	<select id="queryStudyPlanCatalogExist" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.StudyPlanCatalog">
		select is_finished as isFinished,id from
		t_business_study_plan_catalog where employee_id = #{employeeId} and course_id
		= #{courseId}
	</select>
	<!-- 查询学习计划列表 -->
	<select id="queryStudyPlanList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT t.id,t.cover,t.avatar,t.course_name AS
		courseName,o.end_status AS playStatus,o.teacher,o.time_length AS
		timeLength,t.subtitle,a.is_finished as isFinished,t.if_title as ifTitle,o.pdf_address as pdfAddress,
		IF (now() >
		o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS
		playAddress, o.tag,IF (now() > o.play_end_time || p.address_url =
		'',o.play_address, p.address_web_url) AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id JOIN t_business_study_plan a ON a.course_id = t.id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time and a.status=1
		and a.employee_id = #{employeeId} order by a.update_at desc
		limit
		#{page},#{pageCount}
	</select>
	
	<!-- 查询学习计划列表 -->
	<select id="queryCollectionCatalogList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.subtitle as
		subtitle,j.create_at as createAt,j.flag,j.update_at as
		updateAt,j.exam_id as examId,j.cover as cover,j.total as total,j.exam_name as
		examName,a.number,j.avatar,j.teacher_id as teacherId,j.teacher_name as teacherName,j.update_mark as updateMark,
		(SELECT COUNT(*) FROM t_course_online o
		LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p
		ON p.id = o.play_address_id JOIN t_business_second_catalog_course a ON
		a.course_id = t.id JOIN t_business_catalog_second c ON c.id =
		a.catalog_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		and a.`status` = 1 and c.`status` = 1 AND c.parent_id = j.id) AS
		courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_second_catalog_course a JOIN t_business_catalog_second c ON
		c.id = a.catalog_id JOIN t_course b ON a.course_id = b.id where
		c.parent_id = j.id AND a.`status` = 1 AND b.`status` = 1) AS
		studyCount
		from t_business_catalog as j LEFT JOIN t_question_second_type a ON a.id =
		j.exam_id JOIN t_business_study_plan_catalog b ON b.course_id = j.id where j.`status` = 1 and j.id != 1 and j.type=0
		AND b.`status` = 1 AND b.employee_id = #{employeeId}
		order by j.weight desc
		limit #{page},#{pageCount}
	</select>
	
		<!-- 查询学习计划列表 -->
	<select id="queryCollectionCatalogList1" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.subtitle as
		subtitle,j.create_at as createAt,j.flag,j.update_at as
		updateAt,j.exam_id as examId,j.exam_name as
		examName,a.number,j.avatar,j.teacher_id as teacherId,j.teacher_name as teacherName,j.update_mark as updateMark,
		(SELECT COUNT(*) FROM t_course_online o
		LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p
		ON p.id = o.play_address_id JOIN t_business_second_catalog_course a ON
		a.course_id = t.id JOIN t_business_catalog_second c ON c.id =
		a.catalog_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		and a.`status` = 1 and c.`status` = 1 AND c.parent_id = j.id) AS
		courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_second_catalog_course a JOIN t_business_catalog_second c ON
		c.id = a.catalog_id JOIN t_course b ON a.course_id = b.id where
		c.parent_id = j.id AND a.`status` = 1 AND b.`status` = 1) AS
		studyCount
		from t_business_catalog as j LEFT JOIN t_question_second_type a ON a.id =
		j.exam_id JOIN t_business_study_plan_catalog b ON b.course_id = j.id where j.`status` = 1 and j.id != 1 and j.type=0
		AND b.`status` = 1 AND b.employee_id = #{employeeId}
		order by j.weight desc
	</select>
	
		<!-- 查询学习计划列表 -->
	<select id="queryStudyPlanListCount" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT t.id,t.cover,t.avatar,t.course_name AS
		courseName,o.end_status AS playStatus,o.teacher,o.time_length AS
		timeLength,t.subtitle,a.is_finished as isFinished,
		IF (now() >
		o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS
		playAddress, o.tag,IF (now() > o.play_end_time || p.address_url =
		'',o.play_address, p.address_web_url) AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id JOIN t_business_study_plan a ON a.course_id = t.id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and a.status=1
		and a.employee_id = #{employeeId} order by a.update_at desc
	</select>
	<!-- 添加课程推荐信息 -->
	<insert id="saveRecommend" parameterType="java.util.Map"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		t_business_recommend(course_id,employee_id,create_at,status)
		values(#{courseId},#{employeeId},now(),#{status})
	</insert>

	<!-- 修改课程推荐状态 -->
	<update id="updateRecommend" parameterType="java.lang.Long">
		update
		t_business_recommend set status = case when status= 1 then 0 when
		status=0 then 1 else status end,update_at = now() where id = #{id}
	</update>
	<!-- 查询是否已推荐过此课程 -->
	<select id="queryRecommend" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.Recommend">
		select * from t_business_recommend where employee_id =
		#{employeeId} and course_id = #{courseId} and status = 1
	</select>
	<!-- 查询学员是否历史已推荐此课程 -->
	<select id="queryRecommendExist" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.Recommend">
		select * from t_business_recommend where employee_id =
		#{employeeId} and course_id = #{courseId} and status = 0
	</select>
	<!-- 查询课程搜索关键字列表 -->
	<select id="findKeyWordsList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.KeyWords">
		select s.id,s.keywords,s.status from t_business_keywords s
		where s.`status` = 1
		limit #{page},#{pageCount}
	</select>
	<!-- 根据关键字查询课程列表 -->
	<select id="findCourseListByKeyWords" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
	SELECT DISTINCT	t.id,t.cover,t.avatar,	t.course_name AS courseName,o.end_status AS playStatus,o.teacher,
	o.time_length AS timeLength,t.subtitle,o.pdf_address AS pdfAddress,t.if_title AS ifTitle,o.isnew,
	t.exam_id AS examId,t.exam_name AS examName,c.number,
	IF (
		now() > o.play_end_time || p.address_url = '',
		o.play_address,
		p.address_url
	) AS playAddress,
 	o.tag,
	IF (
		now() > o.play_end_time || p.address_url = '',
		o.play_address,
		p.address_web_url
	) AS playAddressM3u8,
	 o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
	 o.price, t.studynum AS studyNum FROM	t_course_online o LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id = o.play_address_id
	 LEFT JOIN t_question_second_type c ON t.exam_id = c.id
	WHERE 1 = 1 and now() >= o.play_begin_time AND o. STATUS = 1 AND t.business_hidden = 0 AND t.`status` = 1
	and o.tag like #{keyWords}
	limit #{page},#{pageCount}
	</select>
	<!-- 查询课程讲师列表 -->
	<select id="findTeachersList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT o.teacher FROM t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden =
		0 GROUP BY o.teacher ORDER BY COUNT(o.teacher) DESC LIMIT 0,15
	</select>
	<!-- 根据讲师查询课程列表 -->
	<select id="findCourseListByTeacher" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT t.id,t.cover,t.avatar,t.course_name AS
		courseName,o.end_status AS playStatus,o.teacher,o.time_length AS
		timeLength,o.isnew,t.subtitle,o.pdf_address as pdfAddress,t.if_title as ifTitle,
		t.exam_id AS examId,t.exam_name AS examName,c.number,
		IF (now() >
		o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS
		playAddress, o.tag,IF (now() > o.play_end_time || p.address_url =
		'',o.play_address, p.address_web_url) AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id join t_business_course z ON z.course_id = t.id JOIN
		t_business_second_type a ON a.id = z.parent_id JOIN
		t_business_first_type b ON b.id = a.parent_id
		LEFT JOIN t_question_second_type c ON t.exam_id = c.id
		WHERE 1 = 1 AND o.STATUS
		= 1 and now() >= o.play_begin_time AND t.business_hidden = 0 and o.teacher = #{teacher}
		ORDER BY t.studynum desc
		limit #{page},#{pageCount}
	</select>
	<!-- 根据讲师查询课程列表 -->
	<select id="findCourseListByTitle" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT t.id,t.cover,t.avatar,t.course_name AS
		courseName,o.end_status AS playStatus,o.isnew,o.teacher,o.time_length AS
		timeLength,t.subtitle,o.pdf_address as pdfAddress,t.if_title as ifTitle,
		t.exam_id AS examId,t.exam_name AS examName,c.number,
		IF (now() >
		o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS
		playAddress, o.tag,IF (now() > o.play_end_time || p.address_url =
		'',o.play_address, p.address_web_url) AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id
		LEFT JOIN
		t_question_second_type c ON t.exam_id = c.id
		WHERE 1 = 1 and now() >= o.play_begin_time AND o.STATUS
		= 1 AND t.business_hidden = 0 and o.is_video=0 and t.course_name like #{title}
		ORDER BY t.studynum desc
		limit #{page},#{pageCount}
	</select>
	<!-- 修改学习计划状态 -->
	<update id="updateStudyPlan" parameterType="java.lang.Long">
		update
		t_business_study_plan set status = case when status= 1 then 0 when
		status=0 then 1 else status end,update_at = now() where id = #{id}
	</update>
	
	<!-- 修改学习计划状态 -->
	<update id="updateStudyPlanCatalog" parameterType="java.lang.Long">
		update
		t_business_study_plan_catalog set status = case when status= 1 then 0 when
		status=0 then 1 else status end,update_at = now() where id = #{id}
	</update>
	<!-- 根据ID修改学习计划状态 -->
	<update id="updateStudyPlanById" parameterType="java.lang.Long">
		update
		t_business_study_plan set is_finished=#{isFinished},update_at = now()
		where id = #{id}
	</update>

	<!-- 删除匿名用户信息 -->
	<update id="updateEmployeeDetailByDeviceId" parameterType="java.lang.Long">
		update t_business_employee set status=2,update_at = now() where id =
		#{id}
	</update>

	<!-- 删除匿名用户信息 -->
	<update id="updateMemberPayById" parameterType="java.util.Map">
		update
		t_business_member_pay set employee_id=#{employeeId},update_at = now()
		where employee_id = #{oldEmployeeId} and status = 1
	</update>
	<!-- 根据课程ID查询课程详情 -->
	<select id="findEmployeeDetail" parameterType="java.lang.Long"
		resultType="cn.ichazuo.model.table.Employee">
		select o.id,o.name,o.sex,o.mobile,o.avatar,o.if_business as
		ifBusiness,o.commodity_id as commodityId,o.create_at as createAt,o.expiry_date as expiryDate from t_business_employee o
		where 1=1 and o.status = 1 and o.id = #{employeeId} limit 1
	</select>
	<!-- 根据设备Id查询用户详情 -->
	<select id="findEmployeeDetailByDeviceId" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Employee">
		select o.id,o.name,o.sex,o.mobile,o.avatar,o.if_business as
		ifBusiness,o.commodity_id as commodityId,o.device_id from
		t_business_employee o where 1=1 and o.status = 1 and o.device_id =
		#{deviceId} limit 1
	</select>
	<select id="findEmployeePlanCount" parameterType="java.lang.Long"
		resultType="java.lang.Integer">
		SELECT count(*) FROM t_business_study_plan where
		employee_id= #{employeeId} and status = 1
	</select>
	<select id="findEmployeeStudyTimeCount" parameterType="java.lang.Long"
		resultType="java.lang.Integer">
		SELECT case when sum(study_time) is null then 0 else
		sum(study_time) end FROM t_business_study where employee_id=
		#{employeeId} and status = 1 and is_finished = 2 and week(create_at,0) = week(now(),0)
	</select>
	<!-- 改版后的总学习时长周榜 -->
	<select id="findEmployeeStudyTimeCountNew" parameterType="java.lang.Long"
		resultType="java.lang.Integer">
		SELECT case when sum(study_time) is null then 0 else
		sum(study_time) end FROM t_business_study_report where employee_id=
		#{employeeId} and type=5
	</select>
	
	<select id="findEmployeeStudyTimeCountAll" parameterType="java.lang.Long"
		resultType="java.lang.Integer">
		SELECT case when sum(study_time) is null then 0 else
		sum(study_time) end FROM t_business_study where employee_id=
		#{employeeId} and status = 1 and is_finished = 2
	</select>
	<!-- 改版后的总学习时长总榜 -->
	<select id="findEmployeeStudyTimeCountAllNew" parameterType="java.lang.Long"
		resultType="java.lang.Integer">
		SELECT case when sum(study_time) is null then 0 else
		sum(study_time) end FROM t_business_study_report where employee_id=
		#{employeeId} and type=1
	</select>
	<!-- 保存意见反馈 -->
	<insert id="saveBusinessFeedBack" parameterType="cn.ichazuo.model.app.BusinessFeedBack">
		insert into
		t_business_feedback(content,employee_id,create_at,version,platform)
		values(#{content},#{employeeId},now(),version,#{platform})
	</insert>
	<!-- 查询已完成学习的课程列表 -->
	<select id="queryStudyFinishedList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT t.id,t.cover,t.avatar,t.course_name AS
		courseName,o.end_status AS playStatus,o.teacher,o.time_length AS
		timeLength,t.subtitle,a.is_finished as isFinished,t.if_title as ifTitle,o.pdf_address as pdfAddress,
		IF (now() >
		o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS
		playAddress, o.tag,IF (now() > o.play_end_time || p.address_url =
		'',o.play_address, p.address_web_url) AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id JOIN t_business_study a ON a.course_id = t.id
		WHERE 1
		= 1 and now() >= o.play_begin_time AND o. STATUS = 1 AND t.business_hidden = 0 and a.employee_id =
		#{employeeId} and a.is_finished = 2 and o.is_video =#{type} order by a.create_at desc
		limit
		#{page},#{pageCount}
	</select>
	
		<!-- 查询已完成学习的课程列表 -->
	<select id="queryStudyFinishedListCount" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT t.id,t.cover,t.avatar,t.course_name AS
		courseName,o.end_status AS playStatus,o.teacher,o.time_length AS
		timeLength,t.subtitle,a.is_finished as isFinished,
		IF (now() >
		o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS
		playAddress, o.tag,IF (now() > o.play_end_time || p.address_url =
		'',o.play_address, p.address_web_url) AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id JOIN t_business_study a ON a.course_id = t.id
		WHERE 1
		= 1 AND o. STATUS = 1 and now() >= o.play_begin_time AND t.business_hidden = 0 and a.employee_id =
		#{employeeId} and a.is_finished = 2
	</select>
	<!-- 查询进度最新的结果 -->
	<select id="queryStudyIfFinished" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT t.id,t.cover,t.avatar,t.course_name AS
		courseName,o.end_status AS playStatus,o.teacher,o.time_length AS
		timeLength,t.subtitle,a.is_finished as isFinished,
		IF (now() >
		o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS
		playAddress, o.tag,IF (now() > o.play_end_time || p.address_url =
		'',o.play_address, p.address_web_url) AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN
		t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id =
		o.play_address_id JOIN t_business_study a ON a.course_id = t.id
		WHERE 1
		= 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time and a.employee_id =
		#{employeeId} and a.course_id = #{courseId} ORDER BY a.is_finished
		DESC LIMIT 1
	</select>
	<!-- 根据课程ID查询课程详细信息 -->
	<select id="findOnlineCourseDetailById" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT t.id,t.cover,t.avatar,t.course_name AS
		courseName,o.end_status AS playStatus,o.teacher,o.time_length AS
		timeLength,t.subtitle,o.pdf_address as pdfAddress,t.exam_id AS
		examId,t.exam_name AS examName,b.number,t.if_title as ifTitle,
		IF (now() > o.play_end_time ||
		p.address_url = '',o.play_address,p.address_url) AS playAddress,
		o.tag,IF (now() > o.play_end_time || p.address_url =
		'',o.play_address, p.address_web_url) AS playAddressM3u8,
		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS
		playEndTime, o.time_length AS timeLength, o.is_video AS isVideo,
		o.price ,t.studynum as studyNum,o.course_ppt as coursePpt FROM
		t_course_online o LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN
		t_play_address p ON p.id = o.play_address_id LEFT JOIN
		t_question_second_type b ON t.exam_id = b.id
		WHERE 1 = 1 AND o. STATUS
		= 1 AND t.business_hidden = 0 and t.id = #{id}
	</select>

	<!-- 保存成绩 -->
	<insert id="saveBusinessScore" parameterType="java.util.Map"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		t_business_ticket(member_id,score,create_at,status,parent_id,parent_name,top_parent_id,nick_name,avatar,exam_type)
		values(#{memberId},#{score},now(),1,#{parentId},#{parentName},#{topParentId},#{nickName},#{avatar},#{examType})
	</insert>
	<!-- 查询课程一级目录列表 -->
	<select id="findFirstTypeList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.FirstType">
		select s.name,s.weight,s.id,s.show_type as showType,s.course_id as courseId,s.cover,s.course_name as courseName,s.teacher_id as teacherId,s.teacher_name as teacherName,type_id as typeId,type_name as typeName from t_business_first_type s
		where s.`status` = 1
		order by s.weight desc
		limit #{page},#{pageCount}
	</select>
	<!-- 查询课程一级目录列表 -->
	<select id="findSelfStudyList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.SelfStudy">
		select a.id,a.title,a.level,i.`value` as type,a.cover,a.subtitle,a.synopsis,ifnull(a.content,'') as content,1 as time,
						a.create_at as createAt,a.tag,a.type as typeId from t_self_study a 
						left join s_dict_item i on i.id = a.type 
						where a.status = 1 and is_hidden = 0
		order by a.weight desc
		limit #{page},#{pageCount}
	</select>
	<!-- 查询课程一级目录列表 -->
	<select id="findSecondTypeList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.SecondType">
		select s.name,s.weight,s.id,s.parent_id as
		parentId,s.parent_name as parentName from t_business_second_type s
		where s.`status` = 1 and s.parent_id = #{parentId}
		order by s.weight desc
	</select>

	<!-- 添加学员课程评论 -->
	<insert id="addCourseComment" parameterType="java.util.Map"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		t_business_course_comment(course_id,employee_id,comment,device_id,create_at,status,platform)
		values(#{courseId},#{employeeId},#{comment},#{deviceId},now(),1,#{platform})
	</insert>
	<!-- 查询课程评论列表 -->
	<select id="findCourseCommentList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.Comment">
		select s.id,s.course_id as courseId,s.employee_id as
		employeeId,s.comment,s.create_at as createAt,b.avatar,
		b.`name`,s.praise_num as praiseNum from t_business_course_comment s
		JOIN t_business_employee b ON s.employee_id = b.id where s.`status` =
		1 and s.course_id=#{courseId}
		order by s.praise_num desc
		limit #{page},#{pageCount}
	</select>
	<!-- 查询课程评论列表 -->
	<select id="findCourseCommentListTop3" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.Comment">
		select s.id,s.course_id as courseId,s.employee_id as
		employeeId,s.comment,s.create_at as createAt,b.avatar,
		b.`name`,s.praise_num as praiseNum from t_business_course_comment s
		JOIN t_business_employee b ON s.employee_id = b.id where s.`status` =
		1 and s.course_id=#{courseId} and s.praise_num >1
		order by s.praise_num desc
		limit 0,3
	</select>
	<!-- 查询评论操作是否已存在 -->
	<select id="queryCommentPraise" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CommentPraise">
		select * from t_business_course_comment_praise where
		employee_id = #{employeeId} and comment_id = #{commentId} and status =
		1
	</select>
	<!-- 修改评论点赞状态 -->
	<update id="updateCommentPraise" parameterType="java.lang.Long">
		update
		t_business_course_comment_praise set status = case when status= 1 then
		0 when status=0 then 1 else status end,update_at = now() where id =
		#{id}
	</update>
	<!-- 查询评论操作是否已存在 -->
	<select id="queryCommentPraiseExist" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CommentPraise">
		select * from t_business_course_comment_praise where
		employee_id = #{employeeId} and comment_id = #{commentId}
	</select>
	<!-- 添加学员点赞记录 -->
	<insert id="saveCommentPraise" parameterType="java.util.Map"
		useGeneratedKeys="true" keyProperty="id">
		insert into
		t_business_course_comment_praise(comment_id,employee_id,create_at,status)
		values(#{commentId},#{employeeId},now(),#{status})
	</insert>
	<!-- 修改课程学习完成人数 -->
	<update id="updateCommentPraiseNum" parameterType="java.util.Map">
		update
		t_business_course_comment set praise_num = praise_num + #{addNum}
		where id = #{id}
	</update>
	
	<!-- 查询学员有学习时长的总人数 -->
	<select id="findEmployeeStudyCount" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT count(*) FROM v_business_study_count
	</select>
	<select id="findEmployeeStudyCountNew" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT count(*) FROM t_business_study_report where type=5 and study_time !=0
	</select>
	<!-- 查询学员有学习时长的总人数 -->
	<select id="findEmployeeStudyCountAll" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT count(*) FROM v_business_study_count_all
	</select>
	<select id="findEmployeeStudyCountAllNew" parameterType="java.util.Map"
		resultType="java.lang.Integer">
		SELECT count(*) FROM t_business_study_report where type=1 and study_time !=0
	</select>
	<!-- 查询学员学习时长所在的排名 -->
	<select id="findEmployeeStudyTimeNo" parameterType="java.util.Map"
		resultType="java.lang.String">
		SELECT case when a.rowNo is null then 0 else a.rowNo end from(SELECT (@rowNum :=@rowNum + 1) AS
		rowNo,employee_id FROM v_business_study_count,(SELECT(@rowNum := 0)) b order by studyTime asc) as a where a.employee_id =
		#{employeeId}
	</select>
	
	<select id="findEmployeeStudyTimeNoNew" parameterType="java.util.Map"
		resultType="java.lang.String">
		SELECT case when a.rowNo is null then 0 else a.rowNo end from(SELECT (@rowNum :=@rowNum + 1) AS
		rowNo,employee_id FROM t_business_study_report,(SELECT(@rowNum := 0)) b where type=5 and study_time !=0 order by study_time asc) as a where a.employee_id =
		#{employeeId}
	</select>
	<!-- 查询学员学习时长所在的排名 -->
	<select id="findEmployeeStudyTimeNoALl" parameterType="java.util.Map"
		resultType="java.lang.String">
		SELECT case when a.rowNo is null then 0 else a.rowNo end from(SELECT (@rowNum :=@rowNum + 1) AS
		rowNo,employee_id FROM v_business_study_count_all,(SELECT(@rowNum := 0)) b order by studyTime asc) as a where a.employee_id =
		#{employeeId} 
	</select>
	
	<select id="findEmployeeStudyTimeNoALlNew" parameterType="java.util.Map"
		resultType="java.lang.String">
		SELECT case when sum(a.rowNo) is null then 0 else sum(a.rowNo) end from(SELECT (@rowNum :=@rowNum + 1) AS
		rowNo,employee_id FROM t_business_study_report,(SELECT(@rowNum := 0)) b where type =1 and study_time!=0 order by study_time asc) as a where a.employee_id =
		#{employeeId}
	</select>
	
	<!-- 查询学员学习时长最大值-->
	<select id="findStudyTimeMax" parameterType="java.util.Map"
		resultType="java.lang.String">
		SELECT (CASE WHEN studyTime IS NULL THEN 0 ELSE studyTime END) AS studyTime  FROM v_business_study_count ORDER BY studyTime DESC limit 1 
	</select>
	<!-- 查询学员学习时长最大值-->
	<select id="findStudyTimeMaxNew" parameterType="java.util.Map"
		resultType="java.lang.String">
		SELECT (CASE WHEN study_time IS NULL THEN 0 ELSE study_time END) AS studyTime  FROM t_business_study_report where type=1 ORDER BY study_time DESC limit 1 
	</select>
	<!-- 查询学员学习时长最大值-->
	<select id="findStudyTimeMin" parameterType="java.util.Map"
		resultType="java.lang.String">
		SELECT studyTime FROM v_business_study_count ORDER BY studyTime asc limit 1 
	</select>
	<select id="findStudyTimeMinNew" parameterType="java.util.Map"
		resultType="java.lang.String">
		SELECT study_time FROM t_business_study_report ORDER BY study_time asc limit 1 
	</select>
	
	<select id="findCatalogShareAddress" parameterType="java.util.Map"
		resultType="java.lang.String">
		SELECT pvalue FROM t_haoduoke_client_properties where status=1 and name=#{name} 
	</select>
	
	<!-- 查询学员学习时间排名前20名列表 -->
	<select id="findStudyTimeRankingList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Employee">
		SELECT employee_id as employeeId,avatar,`name`,studyTime FROM v_business_study_count ORDER BY studyTime DESC
		limit 0,20
	</select>
	<select id="findStudyTimeRankingListAll" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Employee">
		SELECT employee_id as employeeId,avatar,`name`,studyTime FROM v_business_study_count_all ORDER BY studyTime DESC
		limit 0,20
	</select>
	
	<select id="findStudyTimeRankingListNew" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Employee">
		SELECT a.employee_id as employeeId,b.avatar,b.`name`,a.study_time as studyTime FROM t_business_study_report a join t_business_employee b on a.employee_id = b.id
			where b.status=1 and a.type=5 
		 ORDER BY a.study_time DESC
		limit 0,20
	</select>
	<select id="findStudyTimeRankingListAllNew" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Employee">
		SELECT a.employee_id as employeeId,b.avatar,b.`name`,a.study_time as studyTime FROM t_business_study_report a join t_business_employee b on a.employee_id = b.id
			where b.status=1 and a.type=1 
		 ORDER BY a.study_time DESC
		limit 0,20
	</select>
	<!-- 根据企业名称查询企业信息列表 -->
	<select id="findBusinessList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Business">
		SELECT id as id,business_name as businessName,business_level as businessLevel  FROM t_business where status = 1 and business_name = #{name}
	</select>
	<!-- 根据码优惠券码查询优惠券 -->
	<select id="findGiftByCode" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Gift">
		SELECT a.id as id,a.g_code as gCode,a.union_id as unionId,a.nick_name as nickName,a.exp_date as expDate,a.collection_time as collectionTime,a.avatar,a.mobile FROM t_haoduoke_gift a where g_code = #{gCode}
	</select>
	<!-- 查询首页最新课程分类列表 -->
	<select id="findHomePageNewCatalogList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.subtitle as
		subtitle,j.create_at as createAt,j.flag,j.total as total,j.update_at as
		updateAt,j.exam_id as examId,j.exam_name as
		examName,a.number,j.avatar,j.update_mark as updateMark,
		(SELECT COUNT(*) FROM t_course_online o
		LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p
		ON p.id = o.play_address_id JOIN t_business_second_catalog_course a ON
		a.course_id = t.id JOIN t_business_catalog_second c ON c.id =
		a.catalog_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.business_hidden = 0 and now() >= o.play_begin_time
		and a.`status` = 1 and c.`status` = 1 AND c.parent_id = j.id) AS
		courseCount,
		(SELECT sum(b.studynum) FROM
		t_business_second_catalog_course a JOIN t_business_catalog_second c ON
		c.id = a.catalog_id JOIN t_course b ON a.course_id = b.id where
		c.parent_id = j.id AND a.`status` = 1 AND b.`status` = 1) AS
		studyCount
		from t_business_catalog as j LEFT JOIN t_question_second_type a ON a.id =
		j.exam_id where j.`status` = 1 and j.id != 1 and j.type= 0
		order by j.weight desc
		limit 20
	</select>
	<!-- 查询首页Banner列表 -->
	<select id="getBannerList" parameterType="java.lang.Long"
		resultType="cn.ichazuo.model.table.Banner">
		SELECT a.id,a.cover,a.`name`,	a.show_type AS showType,a.weight,a.course_id AS courseId,a.course_name AS courseName,a.teacher_id AS teacherId,a.teacher_name AS teacherName,b.flag,a.type_id as typeId,a.type_name as typeName FROM
		t_business_banner a LEFT JOIN t_business_catalog b ON a.type_id = b.id WHERE a.`status` = 1 ORDER BY	a.weight DESC
	</select>
	<!-- 查询学习完成的课程类型 -->
	<select id="getStudyType" parameterType="java.lang.Long" resultType="cn.ichazuo.model.app.StudyDetail">
		SELECT DISTINCT	c.id FROM t_business_study a JOIN t_course_online b ON a.course_id = b.course_id	JOIN s_dict_item c ON b.online_type_id = c.id
		WHERE employee_id = #{id} AND is_finished = 2 
	</select>
	
	<!-- 查询学习完成的课程Id -->
	<select id="getStudyCourseId" parameterType="java.lang.Long" resultType="cn.ichazuo.model.app.StudyDetail">
		SELECT DISTINCT	course_id as courseId FROM	t_business_study WHERE	employee_id = #{id}	AND is_finished = 2
	</select>
	<!-- 查询学习过的课程Id -->
	<select id="getHaveStudyCourseId" parameterType="java.lang.Long" resultType="cn.ichazuo.model.app.StudyDetail">
		SELECT DISTINCT	course_id as courseId FROM	t_business_study WHERE	employee_id = #{id}
	</select>
	<!-- 查询学员推荐课程列表 -->
	<select id="getRecommendCourseList" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT	t.id,t.cover,t.avatar,t.course_name AS courseName,o.end_status AS playStatus,o.teacher,o.time_length AS timeLength,o.isnew,
		t.subtitle,t.exam_id AS examId,t.exam_name AS examName,b.number,o.pdf_address AS pdfAddress,t.if_title AS ifTitle,
		IF (now() > o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS playAddress, o.tag,
		IF (now() > o.play_end_time || p.address_url = '',o.play_address,p.address_web_url) AS playAddressM3u8, o.create_at AS createAt,
 		o.play_begin_time AS playStartTime, o.play_end_time AS playEndTime, o.time_length AS timeLength, o.is_video AS isVideo, o.price,
 		t.studynum AS studyNum FROM	t_course_online o LEFT JOIN t_course t ON t.id = o.course_id
		LEFT JOIN t_play_address p ON p.id = o.play_address_id JOIN t_business_catalog_course a ON a.course_id = t.id
		LEFT JOIN t_question_second_type b ON b.id = t.exam_id WHERE 1 = 1 and now() >= o.play_begin_time
		AND o. STATUS = 1 AND a. STATUS = 1 AND t.business_hidden = 0 AND o.online_type_id IN (#{resulta}) AND o.course_id NOT IN (#{resultb}) ORDER BY t.studynum DESC LIMIT 5
	</select>
	<!-- 如果推荐学习的课程不足五个，查询剩余的几个 -->
	<select id="getSurplusCourseList" parameterType="java.lang.Long"
		resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT	t.id,t.cover,t.avatar,t.course_name AS courseName,o.end_status AS playStatus,o.teacher,o.time_length AS timeLength,
		t.subtitle,t.exam_id AS examId,t.exam_name AS examName,b.number,o.pdf_address AS pdfAddress,t.if_title AS ifTitle,
		IF (now() > o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS playAddress, o.tag,
		IF (now() > o.play_end_time || p.address_url = '',o.play_address,p.address_web_url) AS playAddressM3u8, o.create_at AS createAt,
 		o.play_begin_time AS playStartTime, o.play_end_time AS playEndTime, o.time_length AS timeLength, o.is_video AS isVideo, o.price,
 		t.studynum AS studyNum FROM	t_course_online o LEFT JOIN t_course t ON t.id = o.course_id
		LEFT JOIN t_play_address p ON p.id = o.play_address_id JOIN t_business_catalog_course a ON a.course_id = t.id
		LEFT JOIN t_question_second_type b ON b.id = t.exam_id WHERE 1 = 1 and now() >= o.play_begin_time
		AND o. STATUS = 1 AND a. STATUS = 1 AND t.business_hidden = 0 ORDER BY t.studynum DESC LIMIT #{id}
	</select>
	<!-- 根据手机号查询是否购买过粥左罗的90招野路子系列课或公开课 -->
	<select id="findCourseWebOrderBymobile" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.WebCourseOrder">
		SELECT a.order_code as orderCode FROM t_course_web_order a JOIN t_course_web_order_user b on a.id = b.order_id where a.status =1 and b.status =1
		and b.mobile = #{mobile} and (a.course_id=848 or a.course_id=2407)
	</select>
	<!-- 根据好多课用户ID查询是否购买过 WEB 粥左罗的90招野路子系列课或公开课 -->
	<select id="findCourseWebOrderByEmployeeId" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.WebCourseOrder">
		SELECT a.order_code as orderCode FROM t_course_web_order a JOIN t_course_web_order_user b on a.id = b.order_id where a.status =1 and b.status =1
		and b.mobile = #{mobile} and (a.course_id=848 or a.course_id=2407)
	</select>
	<!-- 根据好多课用户ID查询是否购买过 APP 粥左罗的90招野路子系列课 -->
	<select id="findCourseAppOrderByEmployeeId" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.WebCourseOrder">
		SELECT order_code as orderCode FROM t_haoduoke_app_order where order_status=1 and employee_id=#{employeeId} and order_catalog_id = 7 and catalog_type=3
	</select>
	<!-- 根据好多课用户ID查询是否购买过 APP 粥左罗的90招野路子公开课 -->
	<select id="findCourseAppOrderByEmployeeId1" parameterType="java.util.Map"
		resultType="cn.ichazuo.model.table.WebCourseOrder">
		SELECT order_code as orderCode FROM t_haoduoke_app_order where order_status=1 and employee_id=#{employeeId} and order_catalog_id = 71 and catalog_type=2
	</select>
</mapper>