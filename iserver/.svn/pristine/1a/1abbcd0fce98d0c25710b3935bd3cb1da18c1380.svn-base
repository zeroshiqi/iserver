<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
  	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
  	http://www.springframework.org/schema/aop 
  	http://www.springframework.org/schema/aop/spring-aop.xsd 
  	http://www.springframework.org/schema/tx     
    http://www.springframework.org/schema/tx/spring-tx-4.0.xsd    
  	http://www.springframework.org/schema/context  
  	http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<!-- 自动扫描 -->
	<context:component-scan base-package="cn.ichazuo">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:configInfo.properties</value>
				<value>classpath:cacheKey.properties</value>
				<value>classpath:jdbc.properties</value>
				<value>classpath:redis.properties</value>
			</list>
		</property>
		<property name="fileEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<!-- 数据源配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="minIdle" value="${dbcp.minIdle}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="initialSize" value="${dbcp.initialSize}" />
		<property name="logAbandoned" value="${dbcp.logAbandoned}" />
		<property name="removeAbandoned" value="${dbcp.removeAbandoned}" />
		<property name="removeAbandonedTimeout" value="${dbcp.removeAbandonedTimeout}" />
		<property name="maxWait" value="${dbcp.maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="${dbcp.timeBetweenEvictionRunsMillis}" />
		<property name="numTestsPerEvictionRun" value="${dbcp.numTestsPerEvictionRun}" />
		<property name="minEvictableIdleTimeMillis" value="${dbcp.minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="select 1" />
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:mapping/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="cn.ichazuo.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 事务管理 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 注解事务声明 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>  
	
	<!-- redis -->
	 <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">  
       <constructor-arg index="0" ref="jedisPoolConfig"/>  
       <constructor-arg index="1">
           <list>
                <bean name="master" class="redis.clients.jedis.JedisShardInfo">  
                   <constructor-arg index="0" value="${redis.master.host}"/>  
                   <constructor-arg index="1" value="${redis.master.port}" type="int"/> 
               </bean>  
           </list>  
       </constructor-arg>  
   </bean>  
   
  <!-- redis连接池 -->
   <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
       <property name="maxTotal" value="${redis.pool.maxTotal}" />  
       <property name="maxIdle" value="${redis.pool.maxIdle}" />  
       <property name="numTestsPerEvictionRun" value="${redis.pool.numTestsPerEvictionRun}"/>  
       <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />  
       <property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />  
       <property name="softMinEvictableIdleTimeMillis" value="${redis.pool.softMinEvictableIdleTimeMillis}" />  
       <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>  
       <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />  
       <property name="testWhileIdle" value="${redis.pool.testWhileIdle}"/>  
       <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>  
       <property name="jmxEnabled" value="${redis.pool.jmxEnabled}"/>  
       <property name="jmxNamePrefix" value="${redis.pool.jmxNamePrefix}"/>  
       <property name="blockWhenExhausted" value="${redis.pool.blockWhenExhausted}"/>  
   </bean>  
	
	<!-- 自定义过滤器托管至Spring -->
	<bean id="authorizationFilter" class="cn.ichazuo.commons.filter.AuthorizeFilter" />
	
</beans>