<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ichazuo.dao.CommonDao">
	<!-- 查询线下课程信息 -->
	<select id="findWebCourseOfflineInfo" resultType="cn.ichazuo.model.app.WebOfflineCourseInfo" parameterType="java.lang.Long">
		select o.is_crowd as isCrowd,t.course_name as title,o.course_content as content,t.create_at as createAt,t.web_click_number as clickNumber,o.price,o.student_num as total 
		from t_course t left join t_course_offline o on o.course_id = t.id where t.status = 1 and t.id = #{courseId}
	</select>
	
	<!-- 查询课程web信息 -->
	<select id="findCourseWebInfo" parameterType="java.lang.Long" resultType="cn.ichazuo.model.table.CourseWebInfo">
		select id,url,ifnull(number,0) as number,course_id as courseId from t_course_web_info where course_id = #{courseId} limit 1
	</select>
	<select id="findUserInfoByUnionId" parameterType="java.lang.String" resultType="cn.ichazuo.model.app.UserInfo">
		select u.name,u.mobile,u.weixin,u.sex,u.`work` as company,ifnull(o.form_nick_name,"") as weixinNickName,o.job,o.buy_intentions as buyIntentions,o.join_reason as joinReason from t_course_web_order_user u 
		left join t_course_web_order o on o.id = u.order_id 
		where u.`status` = 1 and o.status = 1 and o.unionid = #{unionId}  order by o.id desc limit 1
	</select>
	
	<!-- 更新点击时间 -->
	<update id="updateCourseWebInfo" parameterType="cn.ichazuo.model.table.CourseWebInfo">
		update t_course_web_info set number = #{number} where id = #{id}
	</update>
	
	<!-- 查询全部问题 -->
	<select id="findAllQuestion" resultType="cn.ichazuo.model.table.Question">
		select id,a,b,c,d,title,answer,type,user_name as userName from t_question where status = 1
	</select>
	<!-- 根据type的值取相应的题目 -->
	<select id="findAllQuestionByType" resultType="cn.ichazuo.model.table.Question">
		select id,a,b,c,d,title,answer,type,user_name as userName from t_question where status = 1 and type= #{type}
	</select>
	
	<select id="findAllImages" resultType="cn.ichazuo.model.app.Images">
		select url,image_url as imageUrl,title from t_image where status = 1
	</select>
	
	<select id="findAllImagesV2" resultType="cn.ichazuo.model.app.Images" parameterType="java.lang.Integer">
		select url,image_url as imageUrl,title from t_image where status = 1 and type = #{type}
	</select>
	
	<insert id="saveTicket" parameterType="cn.ichazuo.model.table.Ticket" useGeneratedKeys="true" keyProperty="id">
		insert into t_ticket(union_id,price,create_at,level,avatar,nick_name,last_time) 
		values(#{unionId},#{price},now(),#{level},#{avatar},#{nickName},#{lastTime})
	</insert>
	<!-- 答题接口 -->
	<insert id="saveScore" parameterType="cn.ichazuo.model.table.Ticket" useGeneratedKeys="true" keyProperty="id">
		insert into t_ticket(union_id,create_at,avatar,nick_name,score,parent_id,top_parent_id,parent_name) 
		values(#{unionId},now(),#{avatar},#{nickName},#{score},#{parentId},#{topParentId},#{parentName})
	</insert>
	
	<select id="findTicket" parameterType="java.lang.Long" resultType="cn.ichazuo.model.table.Ticket">
		select a.id,a.union_id as unionId,a.price,a.favour,a.level,a.avatar,a.nick_name as nickName,a.status,a.last_time as lastTime,a.score,a.parent_id as parentId,a.top_parent_id as topParentId,a.parent_name as parentName from t_ticket a where a.id = #{id}
	</select>
	
	<select id="findTicketNo" parameterType="cn.ichazuo.model.table.Ticket" resultType="java.lang.Integer">
		SELECT a.rowNo from(SELECT (@rowNum :=@rowNum + 1) AS rowNo,union_id FROM t_ticket,(SELECT(@rowNum := 0)) b where parent_id= #{parentId} and status = 1 order by score asc) as a where a.union_id = #{unionId}
	</select>
	
	<select id="findTicketCount" parameterType="cn.ichazuo.model.table.Ticket" resultType="java.lang.Integer">
		SELECT count(*)	FROM t_ticket where parent_id= #{parentId} and status = 1
	</select>
	
	<select id="findUnionIdById" parameterType="java.lang.Long" resultType="java.lang.String">
		SELECT union_id	FROM t_ticket where id = #{id} and status = 1
	</select>
	
	<select id="findParentIdById" parameterType="java.lang.Long" resultType="java.lang.Integer">
		SELECT parent_id FROM t_ticket where id= #{id} and status = 1
	</select>
	
	<select id="findScoreMaxByParentId" parameterType="java.lang.Integer" resultType="java.lang.Long">
		SELECT score FROM t_ticket where parent_id= #{parentId} and status = 1 order by score desc limit 1
	</select>
	
	<select id="findScoreMinByParentId" parameterType="java.lang.Integer" resultType="java.lang.Long">
		SELECT score FROM t_ticket where parent_id= #{parentId} and status = 1 order by score asc limit 1
	</select>
	
	<update id="updateTicketFavour" parameterType="java.lang.Long">
		update t_ticket set favour = favour + 1 where id = #{id}
	</update>
	
	<select id="findHaveTicket" parameterType="java.lang.String" resultType="java.lang.Long">
		select ifnull(id,0) from t_ticket where union_id = #{unionId} limit 1
	</select>
	
	<select id="findIfHaveTicket" parameterType="cn.ichazuo.model.table.Ticket" resultType="java.lang.Long">
		select ifnull(id,0) from t_ticket where union_id = #{unionId} and parent_id= #{parentId} and top_parent_id= #{topParentId} limit 1
	</select>
	
	<update id="updateTicketStatus" parameterType="java.util.Map">
		update t_ticket set status = #{status} where union_id = #{unionId}
	</update>
	
	<!-- 查询课程评论50条 -->
	<select id="findOnlineCourseCommentLimit50" parameterType="java.lang.Long" resultType="cn.ichazuo.model.app.OnlineCourseCommentInfo">
		select c.id,c.content,if(c.avatar!='',c.avatar,m.avatar) as avatar,if(c.nick_name!='',c.nick_name,m.nick_name) as nickName,c.create_at as createAt 
		from t_course_online_comment c left join t_member m on m.id = c.member_id 
		where 1=1 and c.status = 1 and m.status = 1
		and c.course_id = #{courseId}
		order by c.create_at desc limit 50 
	</select>
	
	<!-- 修改网页课程点击数量 -->
	<update id="updateWebCourseClickNumber" parameterType="java.lang.Long">
		update t_course set web_click_number = web_click_number + 1 where id = #{id}
	</update>
	
	<!-- 查询最大版本号 -->
	<select id="findAppVersionMax" parameterType="java.lang.String" resultType="cn.ichazuo.model.table.Version">
		select id,version,weight,create_at as createAt,client,status from t_version where client = #{client} order by weight desc limit 1
	</select>
	
	<!-- 查询当前版本号 -->
	<select id="findAppVersionByMap" parameterType="java.util.Map" resultType="cn.ichazuo.model.table.Version">
		select id,version,weight,create_at as createAt,client,status from t_version where client = #{client} and version=#{version} limit 1
	</select>
		<!-- 查询企业App最大版本号 -->
	<select id="findBusinessAppVersionMax" parameterType="java.lang.String" resultType="cn.ichazuo.model.table.BusinessVersion">
		select id,version,weight,create_at as createAt,client,status,address from t_business_version where client = #{client} order by weight desc limit 1
	</select>
	
	<!-- 查询当前版本号 -->
	<select id="findBusinessAppVersionByMap" parameterType="java.util.Map" resultType="cn.ichazuo.model.table.BusinessVersion">
		select id,version,weight,create_at as createAt,client,status from t_business_version where client = #{client} and version=#{version} limit 1
	</select>
	
	<update id="updateWebOrderFelicitate" parameterType="java.lang.String">
		update t_course_web_order set felicitate = felicitate + 1 where order_code = #{code}
	</update>
	
	<select id="findFelicitateCount" parameterType="java.lang.String" resultType="java.lang.Integer">
		select ifnull(felicitate,0) from t_course_web_order where order_code = #{code} limit 1
	</select>
	
	<update id="updateWebOrderFelicitates" parameterType="java.lang.Long">
		update t_course_web_order set felicitate = felicitate + 1 where id = #{id}
	</update>
	<update id="updateWebCrowdFelicitates" parameterType="java.lang.Long">
		update t_course_web_crowdfunding set felicitate = felicitate + 1 where id = #{id}
	</update>
	
	<select id="getWebJobList" parameterType="java.util.Map" resultType="cn.ichazuo.model.app.WebJobInfo">
		select j.id,j.job_name as jobName,j.pay,j.tag,j.tags,j.type_id as typeId,i.`value` as typeName,j.cover,
		j.create_at as createAt,j.address,j.email,j.company,j.avatar
 		from t_job j left join s_dict_item i on i.id = j.type_id where j.`status` = 1
 		order by j.create_at desc 
 		limit #{page},#{pageCount}
	</select>
	<select id="getWebJobInfo" parameterType="java.lang.Long" resultType="cn.ichazuo.model.app.WebJobInfo">
		select j.id,j.job_name as jobName,j.pay,j.tag,j.tags,j.type_id as typeId,i.`value` as typeName,j.cover,
		j.create_at as createAt,j.address,j.email,j.company,j.avatar,j.content
 		from t_job j left join s_dict_item i on i.id = j.type_id where j.`status` = 1
 		and j.id = #{id} limit 1
	</select>
	
	<select id="getQRCodeURL" parameterType="java.lang.Long" resultType="java.lang.String">
		select ifnull(qrcode,"") from t_course where id = #{id}
	</select>
	
	<!-- 查询试题列表 -->
	<select id="getQuestionList" parameterType="java.util.Map" resultType="cn.ichazuo.model.app.QuestionListInfo">
		select  q.id , q.title, q.create_at as createAt, q.update_at as updateAt,q.status
        from t_question_first_type q  
        where  q.status = 1
        order by q.create_at desc 
 		limit #{page},#{pageCount}
	</select>
	<!-- 查询试题子目录列表 -->
	<select id="getQuestionChildList" parameterType="java.util.Map" resultType="cn.ichazuo.model.app.QuestionListInfo">
        select q.id , q.title  ,q.parent_id as parentId ,q.create_at as createAt,q.update_at as updateAt,q.status,q.number
        from t_question_second_type q 
        where q.parent_id =  #{id}
        order by q.create_at desc
	</select>
	<!-- 根据二级目录 id的值取相应的题目 -->
	<select id="getChildQuestionsById" resultType="cn.ichazuo.model.table.Question">
		select id,a,b,c,d,title,answer,type,user_name as userName 
		from t_question 
		where status = 1 and parent_id= #{id}
	</select>
	<!-- ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓   企业 App   ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓-->
	<select id="findCatalogList" parameterType="java.util.Map" resultType="cn.ichazuo.model.table.Catalog">
		select j.id as id,j.name as name,j.subtitle as subtitle,j.create_at as createAt,j.update_at as updateAt,
		(SELECT count(*) FROM t_business_catalog_course a where a.catalog_id = j.id AND a.`status` = 1) AS courseCount,
		(SELECT sum(b.studynum) FROM t_business_catalog_course a JOIN t_course b ON a.course_id = b.id where a.catalog_id = j.id AND a.`status` = 1 AND b.`status` = 1) AS studyCount
 		from t_business_catalog as j where j.`status` = 1
 		order by j.create_at desc 
 		limit #{page},#{pageCount}
	</select>
	
	<select id="getCatalogCourseList" parameterType="java.lang.Long" resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT a.catalog_id as catalogId,t.id,t.cover,t.avatar,t.course_name AS courseName,o.end_status AS playStatus,o.teacher,o.time_length AS timeLength,
		IF (now() > o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS playAddress, o.tag,IF (now() > o.play_end_time || p.address_url = '',o.play_address,	p.address_web_url) AS playAddressM3u8,
 		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS playEndTime, o.time_length AS timeLength, o.is_video AS isVideo, o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id = o.play_address_id JOIN t_business_catalog_course a ON a.course_id = t.id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.web_hidden = 0 and a.catalog_id= #{id} ORDER BY o.play_begin_time DESC
	</select>
	
	<!-- 修改课程学习完成人数 -->
	<update id="addStudyNumber" parameterType="java.lang.Long">
		update t_course set studynum = studynum + 1 where id = #{id}
	</update>
	<!-- 添加学员学习详细记录 -->
	<insert id="addStudyDetail" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
		insert into t_business_study(course_id,employee_id,study_time,create_at,is_finished,status) 
		values(#{courseId},#{employeeId},#{studyTime},now(),#{isFinished},#{status})
	</insert>
	
	<select id="findStudyDetail" parameterType="java.util.Map" resultType="cn.ichazuo.model.app.StudyDetail">
		select * from t_business_study s where s.`status` = 2 and s.course_id=#{courseId} and s.employee_id=#{employeeId}
	</select>
	<!-- 查询满足条件的课程列表 -->
	<select id="findCatalogCourseList" parameterType="java.util.Map" resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT a.catalog_id as catalogId,t.id,t.cover,t.avatar,t.course_name AS courseName,o.end_status AS playStatus,o.teacher,o.time_length AS timeLength,
		IF (now() > o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS playAddress, o.tag,IF (now() > o.play_end_time || p.address_url = '',o.play_address,	p.address_web_url) AS playAddressM3u8,
 		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS playEndTime, o.time_length AS timeLength, o.is_video AS isVideo, o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id = o.play_address_id JOIN t_business_catalog_course a ON a.course_id = t.id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.web_hidden = 0
		<if test="keyWords != null">
			and o.online_type_id = #{keyWords}
		</if>
		<if test="timeLength != null">
			and o.time_length >= #{timeLength} and #{max} >= o.time_length
		</if>
		<if test="level != null">
			and t.level = #{level}
		</if>
		ORDER BY t.studynum DESC
		limit #{page},#{pageCount}
	</select>
	<!-- 查询数据字典列表 -->
	<select id="findDictItemList" parameterType="java.util.Map" resultType="cn.ichazuo.model.app.DictItem">
		select s.value,s.weight,s.id from s_dict_item s left join s_dict d on s.dict_id = d.id where s.`status` = 1 and d.`code` = 'ONLINECOURSETYPE'
 		order by s.weight desc 
 		limit #{page},#{pageCount}
	</select>
	<!-- 添加学员学习计划 -->
	<insert id="saveStudyPlan" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
		insert into t_business_study_plan(course_id,employee_id,create_at,status) 
		values(#{courseId},#{employeeId},now(),#{status})
	</insert>
	<!-- 查询学习计划是否已存在 -->
	<select id="queryStudyPlan" parameterType="java.util.Map" resultType="cn.ichazuo.model.app.StudyPlan">
		select * from t_business_study_plan where employee_id = #{employeeId} and course_id = #{courseId} and status = 1
	</select>
	<!-- 查询学习计划列表 -->
	<select id="queryStudyPlanList" parameterType="java.util.Map" resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT t.id,t.cover,t.avatar,t.course_name AS courseName,o.end_status AS playStatus,o.teacher,o.time_length AS timeLength,
		IF (now() > o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS playAddress, o.tag,IF (now() > o.play_end_time || p.address_url = '',o.play_address,	p.address_web_url) AS playAddressM3u8,
 		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS playEndTime, o.time_length AS timeLength, o.is_video AS isVideo, o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id = o.play_address_id JOIN t_business_study_plan a ON a.course_id = t.id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.web_hidden = 0 and a.status=1 and a.employee_id = #{employeeId}
	</select>
	<!-- 添加课程推荐信息 -->
	<insert id="saveRecommend" parameterType="java.util.Map" useGeneratedKeys="true" keyProperty="id">
		insert into t_business_recommend(course_id,employee_id,create_at,status) 
		values(#{courseId},#{employeeId},now(),#{status})
	</insert>
	<!-- 查询是否已推荐过此课程 -->
	<select id="queryRecommend" parameterType="java.util.Map" resultType="cn.ichazuo.model.app.Recommend">
		select * from t_business_recommend where employee_id = #{employeeId} and course_id = #{courseId} and status = 1
	</select>
	<!-- 查询课程搜索关键字列表 -->
	<select id="findKeyWordsList" parameterType="java.util.Map" resultType="cn.ichazuo.model.app.KeyWords">
		select s.id,s.keywords,s.status from t_business_keywords s where s.`status` = 1
 		limit #{page},#{pageCount}
	</select>
	<!-- 根据关键字查询课程列表 -->
	<select id="findCourseListByKeyWords" parameterType="java.util.Map" resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT t.id,t.cover,t.avatar,t.course_name AS courseName,o.end_status AS playStatus,o.teacher,o.time_length AS timeLength,
		IF (now() > o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS playAddress, o.tag,IF (now() > o.play_end_time || p.address_url = '',o.play_address,	p.address_web_url) AS playAddressM3u8,
 		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS playEndTime, o.time_length AS timeLength, o.is_video AS isVideo, o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id = o.play_address_id JOIN t_business_study_plan a ON a.course_id = t.id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.web_hidden = 0 and a.status=1 and o.tag like #{keyWords} 
		limit #{page},#{pageCount}
	</select>
	<!-- 查询课程讲师列表 -->
	<select id="findTeachersList" parameterType="java.util.Map" resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT DISTINCT o.teacher FROM t_course_online o LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id = o.play_address_id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.web_hidden = 0  
		limit #{page},#{pageCount}
	</select>
	<!-- 根据讲师查询课程列表 -->
	<select id="findCourseListByTeacher" parameterType="java.util.Map" resultType="cn.ichazuo.model.app.CatalogCourseList">
		SELECT t.id,t.cover,t.avatar,t.course_name AS courseName,o.end_status AS playStatus,o.teacher,o.time_length AS timeLength,
		IF (now() > o.play_end_time || p.address_url = '',o.play_address,p.address_url) AS playAddress, o.tag,IF (now() > o.play_end_time || p.address_url = '',o.play_address,	p.address_web_url) AS playAddressM3u8,
 		o.create_at AS createAt, o.play_begin_time AS playStartTime, o.play_end_time AS playEndTime, o.time_length AS timeLength, o.is_video AS isVideo, o.price ,t.studynum as studyNum FROM
		t_course_online o LEFT JOIN t_course t ON t.id = o.course_id LEFT JOIN t_play_address p ON p.id = o.play_address_id JOIN t_business_study_plan a ON a.course_id = t.id
		WHERE 1 = 1 AND o. STATUS = 1 AND t.web_hidden = 0 and a.status=1 and o.teacher = #{teacher}  
		limit #{page},#{pageCount}
	</select>
	
	<!-- 修改课程学习完成人数 -->
	<update id="updateStudyPlan" parameterType="java.lang.Long">
		update t_business_study_plan set status = #{status} where employee_id = #{employeeId} and course_id = #{courseId} and status = 1
	</update>
	<!-- 根据课程ID查询课程详情 -->
	<select id="findEmployeeDetail" parameterType="java.lang.Long" resultType="cn.ichazuo.model.table.Employee">
		select * from t_business_employee o where 1=1 and o.status = 1 and o.id = #{employeeId} limit 1
	</select>
	<select id="findEmployeePlanCount" parameterType="java.lang.Long" resultType="java.lang.Integer">
		SELECT count(*) FROM t_business_study_plan where employee_id= #{employeeId} and status = 1
	</select>
	<select id="findEmployeeStudyTimeCount" parameterType="java.lang.Long" resultType="java.lang.Integer">
		SELECT case when sum(study_time) is null then 0 else sum(study_time) end  FROM t_business_study where employee_id= #{employeeId} and status = 2
	</select>
</mapper>